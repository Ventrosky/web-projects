


var participants = [
	"2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "14b", "14c", "14d", "15", "15b", "15c", "15d", "16", "17", "18", "19", "20", "21", "22", "23", 
	"24", "24b", "24c", "24d", "25", "26", "27", "27b", "27c", "27d", "28", "28b", "28c", "28d", "29", "30", "31", "32", "32b", "32c", "32d",	"33",	"34",	"35",	"36",	
	"37",	"38",	"38b",	"38c", "38d", "39", "39b", "39c","39d",	"40",	"40b",	"40c", "40d","41","42",	"43",	"45", "46", 	"47",	"47b",	"48", "49",	"50",	"52",	
	"53",	"54",	"54b",	"55",	"56",	"56b",	"58b", "59", "59b",	"60",	"61",	"63"
];
              //idx 0            num-1 basicly
var timing = [  //  #1	#2	#3	#4	#5	#6	#7	#8	#9	#10	#11	#12	#13	#14	#15	#16
				[   55,	43,	10,	48,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0],
				[   55,	42,	32,	20,	9,	67,	11,	65,	7,	0,	0,	0,	0,	0,	0,	0],
				[   47,	14,	66,	45,	36,	57,	68,	2,	30,	50,	67,	34,	1,	41,	26,	37],
				[   29,	32,	49,	27,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0],
				[   59,	68,	15,	48,	3,	41,	43,	66,	1,	0,	0,	0,	0,	0,	0,	0],
				[   53, 56,	2,	70,	38,	5,	17,	9,	35,	33,	65,	59,	15,	18,	64,	3],
				[   2,	6,	41,	30,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0],
				[   10,	60,	19,	36,	35,	37,	22,	27,	26,	0,	0,	0,	0,	0,	0,	0],
				[   37,	18,	28,	64,	61,	8,	38,	23,	45,	32,	16,	30,	50,	42,	12,	9],
				[   65,	7,	26,	37,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0],
				[   69,	4,	27,	54,	40,	21,	58,	6,	20,	0,	0,	0,	0,	0,	0,	0],
				[   26,	60,	47,	43,	10,	6,	57,	27,	31,	29,	62,	17,	14,	52,	51,	34],
				[   8,	63,	44,	61,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0],
				[   63,	46,	47,	32,	10,	62,	57,	28,	52,	0,	0,	0,	0,	0,	0,	0],
				[   26,	42,	46,	60,	6,	36,	28,	39,	35,	14,	7,	1,	4,	19,	44,	57],
				[   45,	1,	22,	8,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0],
				[   23,	26,	55,	7,	63,	1,	19,	4,	28,	0,	0,	0,	0,	0,	0,	0],
				[   44,	69,	45,	37,	16,	49,	57,	55,	38,	40,	63,	26,	17,	67,	58,	35],
				[   45,	5,	46,	32,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0],
				[   56,	64,	37,	54,	38,	49,	1,	31,	16,	0,	0,	0,	0,	0,	0,	0],
				[   4,	69,	15,	41,	23,	47,	2,	5,	58,	6,	20,	32,	68,	31,	44,	29],
				[   22,	36,	49,	55,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0],
				[   22,	67,	15,	35,	68,	37,	64,	9,	60,	0,	0,	0,	0,	0,	0,	0],
				[   66,	11,	29,	19,	40,	3,	5,	21,	7,	69,	23,	65,	42,	37,	10,	4],
				[   23,	22,	24,	45,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0],
				[   9,	13,	44,	70,	6,	43,	2,	63,	34,	0,	0,	0,	0,	0,	0,	0],
				[   29,	32,	14,	59,	40,	2,	58,	70,	4,	7,	60,	52,	36,	65,	19,	26],
				[   61,	53,	60,	59,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0],
				[   27,	49,	65,	26,	46,	40,	50,	38,	24,	0,	0,	0,	0,	0,	0,	0],
				[   7,	40,	23,	31,	39,	5,	4,	19,	33,	35,	15,	54,	48,	26,	55,	32],
				[   13,	59,	66,	52,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0],
				[   60,	16,	55,	67,	19,	47,	43,	27,	31,	0,	0,	0,	0,	0,	0,	0],
				[   17,	56,	31,	70,	64,	10,	33,	62,	41,	38,	29,	35,	53,	22,	13,	24],
				[   62,	5,	44,	22,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0],
				[   67,	66,	50,	26,	3,	38,	37,	23,	55,	0,	0,	0,	0,	0,	0,	0],
				[   20,	31,	43,	36,	26,	57,	70,	66,	33,	4,	14,	7,	6,	51,	2,	47],
				[   45,	61,	26,	52,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0],
				[   44,	70,	21,	6,	20,	16,	23,	54,	10,	0,	0,	0,	0,	0,	0,	0],
				[   36,	8,	34,	41,	6,	64,	42,	30,	54,	17,	50,	20,	55,	14,	62,	29],
				[   12,	36,	43,	48,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0],
				[   12,	36,	42,	11,	68,	55,	51,	17,	20,	0,	0,	0,	0,	0,	0,	0],
				[   40,	69,	53,	22,	4,	3,	68,	26,	24,	32,	54,	62,	36,	6,	19,	8],
				[   22,	19,	63,	42,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0],
				[   13,	31,	23,	19,	62,	26,	25,	38,	5,	0,	0,	0,	0,	0,	0,	0],
				[   18,	27,	19,	15,	42,	52,	14,	57,	47,	33,	59,	34,	13,	49,	63,	70],
				[   7,	44,	14,	53,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0],
				[   15,	50,	40,	14,	56,	28,	35,	34,	12,	0,	0,	0,	0,	0,	0,	0],
				[   23,	58,	34,	4,	52,	28,	18,	22,	70,	49,	3,	43,	51,	17,	37,	13],
				[   61,	24,	10,	52,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0],
				[   6,	33,	3,	30,	37,	42,	68,	45,	11,	0,	0,	0,	0,	0,	0,	0],
				[   44,	6,	66,	41,	26,	2,	55,	39,	53,	31,	1,	64,	24,	42,	9,	45],
				[   23,	18,	14,	5,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0],
				[   42,	70,	53,	4,	57,	25,	26,	21,	35,	0,	0,	0,	0,	0,	0,	0],
				[   64,	54,	52,	28,	47,	37,	38,	22,	44,	10,	1,	34,	32,	58,	39,	68],
				[   39,	28,	52,	33,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0],
				[   21,	26,	24,	43,	44,	65,	61,	23,	12,	0,	0,	0,	0,	0,	0,	0],
				[   67,	63,	42,	69,	8,	23,	3,	34,	46,	12,	26,	6,	18,	45,	31,	43],
				[   27,	5,	15,	37,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0,	0],
				[   65,	20,	38,	62,	6,	17,	28,	37,	56,	0,	0,	0,	0,	0,	0,	0],
				[   45,	62,	5,	12,	28,	49,	58,	2,	9,	26,	46,	31,	44,	10,	38,	35]	
];
					//[Q01]Value to [Q60]Value
var certainty = [ //Particiant	   02	03	04	05	06	07	08	09	10	11	12	13	14	14b	14c	14d	15	15b	15c	15d	16	17	18	19	20	21	22	23	24	24b	24c	24d	25	26	27	27b	27c	27d	28	28b	28c	28d	29	30	31	32	32b	32c	32d	33	34	35	36	37	38	38b	38c	38d	39	39b	39c	39d	40	40b	40c	40d	41	42	43	45	46	47	47b	48	49	50	52	53	54	54b	55	56	56b	58b	59	59b	60	61	63                                                                                                                                                                                                                                                                                                                                                                                       
								 [	3,	3,	3,	4,	4,	4,	3,	2,	3,	5,	3,	2,	1,	4,	5,	5,	5,	5,	5,	3,	1,	2,	1,	2,	4,	5,	3,	5,	2,	5,	4,	5,	3,	3,	1,	5,	5,	5,	4,	4,	4,	5,	4,	5,	4,	1,	5,	5,	5,	3,	4,	3,	5,	5,	4,	4,	3,	3,	2,	3,	4,	5,	5,	2,	3,	4,	3,	3,	3,	3,	2,	4,	4,	2,	5,	2,	5,	5,	4,	5,	5,	5,	5,	5,	4,	2,	4,	3,	4],
								 [	4,	5,	4,	5,	5,	2,	3,	3,	3,	5,	4,	4,	4,	5,	5,	5,	5,	4,	3,	4,	3,	5,	4,	4,	5,	5,	4,	5,	4,	2,	5,	4,	4,	5,	5,	5,	5,	5,	5,	5,	5,	5,	3,	4,	3,	1,	5,	4,	5,	5,	2,	5,	5,	5,	3,	4,	2,	4,	4,	4,	4,	5,	5,	5,	4,	4,	3,	2,	4,	4,	5,	4,	1,	3,	4,	3,	5,	4,	5,	3,	5,	5,	5,	5,	5,	2,	5,	5,	4],
								 [	3,	3,	3,	4,	4,	4,	3,	4,	4,	2,	4,	1,	1,	4,	4,	4,	5,	5,	3,	4,	3,	5,	2,	1,	5,	4,	2,	5,	2,	4,	3,	4,	5,	1,	3,	5,	4,	4,	3,	5,	4,	4,	1,	1,	4,	3,	5,	3,	5,	4,	4,	1,	1,	5,	3,	3,	4,	2,	3,	3,	1,	4,	5,	5,	4,	5,	1,	1,	3,	3,	1,	2,	3,	4,	5,	4,	5,	3,	5,	3,	5,	5,	5,	5,	3,	5,	5,	1,	4],
								 [	2,	4,	5,	5,	4,	4,	4,	5,	4,	5,	4,	5,	4,	3,	5,	5,	4,	5,	4,	5,	5,	5,	4,	4,	5,	5,	5,	5,	4,	4,	5,	5,	5,	5,	5,	5,	5,	5,	4,	4,	5,	5,	5,	4,	5,	5,	5,	5,	5,	5,	3,	5,	5,	5,	5,	5,	4,	5,	4,	3,	4,	5,	5,	5,	5,	5,	4,	5,	4,	2,	3,	3,	4,	5,	4,	2,	5,	4,	4,	5,	5,	3,	5,	5,	5,	4,	5,	5,	4],
								 [	3,	4,	5,	5,	5,	3,	4,	5,	5,	4,	5,	4,	4,	5,	5,	5,	5,	5,	5,	5,	3,	4,	5,	3,	4,	5,	4,	5,	5,	4,	4,	4,	4,	4,	5,	5,	5,	5,	4,	5,	5,	4,	4,	3,	5,	4,	5,	5,	4,	4,	4,	2,	5,	5,	2,	4,	4,	5,	5,	5,	5,	5,	5,	5,	5,	5,	5,	4,	4,	4,	5,	2,	4,	5,	5,	4,	5,	5,	4,	4,	5,	4,	5,	5,	1,	3,	2,	1,	5],
								 [	4,	3,	4,	4,	5,	4,	3,	5,	2,	4,	1,	2,	5,	5,	1,	5,	1,	3,	3,	5,	4,	2,	1,	3,	4,	3,	5,	5,	3,	2,	3,	3,	4,	4,	4,	5,	4,	4,	4,	5,	5,	5,	1,	5,	4,	4,	3,	4,	1,	3,	4,	5,	5,	5,	3,	3,	1,	4,	4,	3,	5,	4,	5,	4,	5,	4,	1,	3,	3,	3,	5,	1,	3,	1,	5,	3,	4,	3,	4,	4,	5,	4,	4,	3,	3,	1,	5,	4,	4],
								 [	5,	5,	2,	5,	3,	4,	5,	1,	5,	4,	5,	5,	5,	5,	4,	4,	4,	4,	3,	5,	4,	4,	5,	5,	4,	4,	3,	5,	5,	3,	5,	5,	5,	5,	5,	5,	4,	5,	3,	5,	5,	5,	5,	5,	5,	5,	5,	5,	5,	3,	2,	5,	2,	5,	5,	4,	3,	4,	4,	4,	3,	5,	5,	5,	5,	5,	4,	5,	4,	5,	5,	4,	3,	5,	4,	4,	5,	5,	5,	5,	5,	5,	4,	5,	4,	4,	5,	3,	5],
								 [	5,	5,	5,	5,	4,	2,	4,	5,	4,	5,	5,	5,	5,	5,	5,	4,	5,	5,	4,	5,	5,	3,	3,	5,	4,	5,	4,	4,	3,	4,	4,	4,	4,	5,	5,	5,	5,	5,	4,	4,	5,	5,	4,	5,	4,	5,	5,	3,	5,	5,	3,	3,	5,	5,	4,	3,	4,	5,	5,	4,	5,	5,	4,	5,	5,	5,	3,	5,	4,	4,	5,	3,	3,	5,	5,	4,	5,	4,	5,	5,	5,	5,	5,	3,	1,	5,	5,	5,	5],
								 [	3,	5,	5,	5,	4,	4,	4,	5,	4,	4,	5,	5,	4,	4,	4,	5,	5,	1,	5,	5,	5,	5,	4,	5,	4,	4,	5,	5,	3,	3,	4,	4,	5,	4,	5,	5,	5,	5,	5,	5,	5,	5,	4,	3,	3,	5,	4,	5,	5,	4,	3,	5,	5,	5,	5,	4,	4,	4,	4,	4,	3,	5,	5,	2,	5,	5,	4,	1,	4,	4,	5,	4,	4,	4,	5,	3,	5,	1,	5,	3,	5,	5,	5,	3,	4,	5,	5,	5,	5],
								 [	5,	5,	5,	5,	5,	3,	5,	5,	5,	4,	4,	3,	5,	4,	5,	5,	5,	5,	4,	4,	5,	4,	5,	5,	3,	5,	4,	5,	4,	5,	5,	5,	5,	5,	5,	5,	5,	5,	5,	3,	5,	5,	5,	4,	4,	5,	5,	5,	5,	5,	4,	5,	5,	4,	4,	4,	3,	4,	5,	5,	5,	5,	4,	4,	5,	5,	5,	5,	5,	4,	5,	4,	5,	5,	5,	5,	5,	5,	5,	3,	5,	5,	5,	4,	5,	3,	1,	5,	5],
								 [	4,	4,	5,	5,	2,	2,	5,	4,	1,	5,	1,	4,	5,	5,	3,	5,	5,	5,	5,	5,	5,	4,	5,	5,	4,	5,	1,	5,	5,	4,	4,	4,	5,	5,	5,	5,	5,	5,	5,	4,	5,	5,	4,	4,	5,	5,	5,	5,	5,	1,	3,	5,	5,	4,	3,	4,	4,	4,	4,	4,	4,	5,	4,	4,	5,	5,	4,	5,	4,	3,	5,	3,	4,	5,	5,	5,	5,	5,	3,	5,	5,	5,	5,	5,	5,	4,	4,	5,	1],
								 [	2,	4,	4,	5,	4,	3,	4,	5,	3,	3,	4,	2,	5,	5,	5,	5,	5,	5,	5,	5,	5,	3,	4,	4,	1,	4,	3,	5,	4,	3,	4,	5,	5,	5,	5,	4,	5,	4,	4,	5,	4,	5,	5,	4,	2,	5,	5,	3,	5,	4,	4,	4,	1,	5,	4,	2,	4,	5,	4,	5,	3,	5,	2,	3,	5,	5,	4,	5,	4,	4,	4,	2,	3,	1,	5,	2,	5,	4,	5,	5,	1,	5,	5,	4,	4,	3,	4,	5,	5],
								 [	5,	5,	5,	5,	3,	2,	5,	4,	5,	5,	5,	4,	5,	5,	5,	5,	5,	4,	5,	4,	4,	4,	5,	4,	5,	3,	5,	5,	3,	5,	5,	5,	5,	5,	4,	4,	5,	3,	4,	5,	5,	5,	5,	5,	5,	5,	5,	5,	5,	5,	3,	5,	5,	5,	4,	1,	5,	4,	5,	4,	4,	5,	4,	5,	5,	5,	4,	5,	3,	4,	3,	4,	5,	5,	5,	5,	5,	5,	4,	3,	5,	5,	4,	4,	5,	5,	5,	4,	4],
								 [	3,	5,	4,	5,	2,	3,	4,	4,	5,	5,	5,	4,	5,	4,	5,	3,	1,	5,	5,	5,	3,	4,	4,	5,	5,	5,	5,	5,	4,	4,	5,	2,	5,	5,	5,	1,	5,	5,	5,	5,	5,	4,	2,	4,	3,	5,	5,	5,	5,	5,	3,	5,	5,	5,	4,	4,	4,	4,	5,	4,	4,	5,	5,	4,	5,	5,	3,	5,	3,	4,	5,	5,	3,	5,	4,	4,	3,	5,	4,	5,	5,	5,	5,	4,	5,	5,	5,	5,	4],
								 [	4,	4,	1,	5,	5,	3,	3,	1,	3,	4,	4,	5,	5,	1,	5,	5,	3,	1,	1,	1,	4,	4,	1,	4,	1,	2,	4,	4,	2,	2,	4,	1,	4,	4,	5,	4,	5,	4,	3,	1,	5,	5,	1,	5,	3,	3,	5,	4,	4,	2,	4,	3,	5,	5,	1,	3,	1,	1,	4,	5,	2,	5,	4,	5,	5,	5,	4,	4,	3,	3,	1,	3,	2,	3,	4,	4,	5,	3,	4,	1,	5,	5,	5,	4,	1,	5,	3,	5,	1],
								 [	4,	5,	5,	5,	5,	2,	5,	5,	4,	5,	2,	5,	5,	3,	5,	5,	5,	5,	4,	5,	5,	4,	5,	1,	5,	5,	5,	4,	5,	4,	5,	5,	5,	5,	5,	4,	5,	5,	5,	5,	4,	5,	5,	5,	4,	5,	5,	5,	3,	5,	3,	5,	5,	3,	4,	5,	5,	5,	4,	5,	4,	4,	5,	5,	4,	5,	5,	5,	5,	3,	5,	5,	4,	4,	4,	4,	5,	5,	5,	5,	5,	5,	5,	5,	5,	4,	5,	4,	5],
								 [	5,	5,	5,	5,	2,	3,	5,	2,	5,	5,	2,	5,	5,	5,	5,	5,	4,	3,	5,	4,	5,	4,	4,	4,	5,	5,	3,	5,	4,	5,	5,	3,	5,	5,	4,	4,	5,	5,	5,	5,	5,	4,	5,	4,	4,	5,	5,	5,	5,	4,	3,	5,	5,	1,	4,	3,	5,	4,	5,	5,	3,	5,	5,	5,	5,	5,	5,	4,	4,	4,	5,	4,	4,	3,	5,	4,	5,	4,	4,	5,	5,	5,	5,	5,	4,	5,	4,	5,	4],
								 [	3,	3,	3,	5,	4,	3,	4,	4,	2,	4,	4,	1,	1,	4,	5,	5,	1,	5,	4,	5,	3,	4,	1,	3,	4,	4,	4,	3,	3,	3,	1,	3,	4,	3,	1,	4,	1,	2,	4,	5,	5,	1,	3,	4,	2,	4,	5,	5,	5,	4,	4,	3,	5,	5,	4,	2,	4,	1,	5,	1,	5,	5,	4,	4,	1,	5,	3,	5,	3,	4,	3,	1,	3,	1,	5,	2,	5,	1,	5,	1,	5,	5,	5,	5,	5,	5,	5,	5,	3],
								 [	5,	5,	5,	5,	5,	2,	4,	4,	4,	5,	3,	5,	4,	4,	2,	5,	4,	3,	3,	5,	4,	5,	3,	5,	4,	4,	4,	5,	3,	4,	4,	5,	5,	5,	5,	1,	4,	5,	5,	4,	4,	5,	4,	2,	3,	5,	5,	4,	5,	5,	3,	5,	5,	4,	4,	3,	2,	4,	5,	4,	1,	5,	4,	5,	4,	4,	4,	5,	4,	3,	4,	5,	2,	4,	5,	5,	5,	5,	5,	4,	5,	5,	5,	1,	3,	5,	5,	5,	2],
								 [	4,	4,	4,	5,	5,	4,	3,	4,	3,	3,	4,	3,	5,	3,	4,	5,	4,	4,	5,	5,	4,	3,	4,	2,	5,	5,	4,	5,	1,	4,	3,	4,	3,	4,	1,	3,	4,	1,	5,	4,	3,	4,	4,	1,	2,	3,	4,	5,	2,	3,	3,	4,	5,	5,	4,	4,	4,	5,	5,	5,	3,	5,	5,	5,	2,	4,	4,	4,	4,	3,	3,	3,	5,	3,	4,	3,	5,	4,	5,	2,	5,	5,	5,	4,	5,	3,	1,	5,	3],
								 [	4,	1,	4,	5,	5,	3,	4,	3,	3,	4,	1,	4,	3,	4,	4,	3,	5,	5,	5,	5,	4,	3,	4,	4,	5,	4,	5,	4,	4,	4,	4,	4,	5,	5,	5,	5,	5,	5,	5,	1,	5,	5,	3,	3,	3,	5,	4,	5,	5,	4,	3,	3,	5,	4,	3,	4,	4,	4,	4,	4,	4,	5,	5,	4,	5,	5,	4,	1,	3,	3,	4,	5,	4,	3,	5,	4,	5,	3,	5,	4,	5,	5,	5,	4,	5,	3,	5,	5,	4],
								 [	4,	4,	4,	5,	1,	1,	5,	4,	4,	4,	5,	5,	3,	5,	5,	5,	2,	5,	1,	5,	4,	3,	3,	5,	4,	5,	2,	4,	2,	4,	5,	5,	2,	5,	5,	4,	4,	4,	5,	4,	5,	5,	4,	3,	5,	5,	5,	5,	5,	3,	3,	4,	5,	5,	2,	4,	4,	3,	5,	4,	2,	5,	5,	4,	5,	4,	3,	5,	4,	2,	5,	4,	5,	2,	4,	3,	3,	5,	5,	5,	5,	2,	5,	4,	5,	3,	5,	4,	1],
								 [	5,	5,	4,	5,	4,	3,	4,	4,	1,	5,	3,	5,	4,	4,	5,	5,	2,	5,	5,	2,	4,	2,	1,	4,	4,	5,	4,	5,	4,	5,	3,	5,	4,	1,	3,	4,	4,	5,	5,	2,	2,	5,	2,	4,	1,	4,	5,	2,	4,	4,	3,	3,	5,	1,	4,	4,	2,	4,	3,	3,	5,	4,	5,	3,	4,	5,	3,	5,	4,	4,	4,	2,	1,	4,	5,	4,	5,	4,	4,	5,	5,	2,	5,	3,	5,	1,	5,	5,	2],
								 [	4,	5,	5,	5,	5,	2,	5,	4,	3,	5,	5,	5,	4,	5,	5,	5,	4,	5,	5,	4,	5,	4,	4,	5,	4,	5,	4,	4,	3,	3,	5,	3,	5,	1,	4,	5,	5,	4,	5,	5,	4,	5,	1,	3,	4,	5,	4,	5,	5,	5,	3,	3,	5,	3,	3,	4,	4,	4,	1,	4,	5,	4,	5,	5,	5,	5,	2,	5,	4,	4,	5,	4,	3,	4,	4,	4,	5,	5,	5,	4,	5,	5,	5,	2,	4,	5,	5,	5,	4],
								 [	4,	5,	5,	5,	5,	2,	4,	5,	5,	5,	4,	5,	3,	5,	5,	5,	5,	5,	5,	3,	5,	5,	5,	4,	4,	5,	1,	4,	3,	5,	5,	5,	5,	4,	5,	3,	5,	4,	5,	5,	3,	5,	5,	5,	5,	5,	5,	5,	5,	5,	3,	5,	5,	5,	4,	4,	4,	4,	5,	5,	5,	5,	5,	5,	5,	5,	4,	5,	4,	4,	5,	3,	2,	4,	5,	5,	4,	5,	5,	5,	5,	5,	5,	2,	3,	4,	1,	4,	4],
								 [	1,	4,	3,	4,	5,	2,	5,	4,	1,	3,	4,	4,	4,	4,	4,	5,	3,	1,	5,	3,	5,	3,	2,	4,	3,	5,	4,	5,	2,	2,	3,	5,	4,	4,	4,	3,	5,	4,	4,	5,	4,	5,	3,	4,	4,	5,	3,	4,	4,	4,	4,	4,	5,	1,	4,	4,	3,	3,	4,	5,	4,	3,	4,	3,	5,	4,	2,	5,	3,	4,	3,	5,	4,	4,	5,	3,	5,	5,	5,	5,	5,	5,	5,	2,	5,	4,	1,	5,	4],
								 [	4,	4,	4,	3,	3,	3,	5,	3,	3,	5,	4,	5,	4,	5,	3,	5,	2,	5,	5,	5,	2,	4,	1,	2,	4,	3,	4,	5,	3,	3,	4,	1,	4,	5,	4,	4,	4,	2,	3,	4,	5,	5,	1,	1,	4,	1,	4,	2,	5,	4,	3,	3,	5,	3,	3,	2,	3,	4,	1,	3,	4,	5,	3,	3,	5,	3,	2,	5,	4,	4,	4,	4,	4,	3,	4,	4,	5,	4,	5,	4,	3,	5,	4,	4,	4,	3,	2,	5,	3],
								 [	5,	5,	4,	5,	1,	4,	5,	5,	5,	5,	5,	4,	4,	4,	5,	5,	5,	5,	4,	5,	5,	5,	5,	3,	4,	4,	5,	5,	4,	5,	5,	5,	5,	4,	5,	5,	5,	5,	5,	5,	5,	5,	5,	4,	5,	5,	5,	3,	5,	1,	3,	2,	5,	1,	4,	4,	4,	4,	4,	5,	5,	5,	5,	5,	4,	5,	5,	5,	3,	2,	4,	4,	5,	4,	5,	5,	5,	5,	4,	4,	5,	5,	5,	4,	5,	3,	5,	4,	1],
								 [	3,	4,	3,	5,	5,	3,	4,	5,	5,	4,	1,	5,	4,	4,	5,	5,	5,	5,	1,	5,	5,	4,	4,	4,	4,	5,	5,	5,	5,	3,	5,	5,	3,	4,	5,	5,	4,	5,	4,	5,	4,	5,	5,	4,	4,	5,	5,	5,	5,	4,	4,	3,	5,	5,	4,	4,	3,	4,	4,	4,	4,	5,	5,	4,	5,	5,	3,	5,	4,	4,	5,	4,	3,	4,	5,	4,	5,	5,	5,	5,	5,	5,	5,	5,	5,	2,	5,	4,	5],
								 [	5,	3,	4,	5,	3,	3,	1,	4,	3,	4,	4,	4,	4,	4,	4,	5,	4,	5,	5,	2,	5,	4,	1,	4,	4,	5,	3,	5,	4,	2,	3,	3,	5,	5,	1,	3,	1,	3,	2,	1,	1,	5,	2,	4,	4,	5,	5,	5,	5,	4,	2,	3,	5,	1,	3,	4,	1,	4,	5,	3,	4,	4,	5,	4,	3,	5,	3,	4,	1,	4,	4,	3,	3,	3,	4,	4,	4,	4,	5,	5,	5,	3,	5,	5,	5,	3,	5,	5,	1],
								 [	2,	5,	5,	5,	3,	4,	4,	5,	4,	2,	2,	5,	3,	5,	5,	2,	5,	5,	4,	5,	3,	5,	4,	4,	4,	3,	5,	3,	4,	4,	5,	5,	1,	5,	1,	5,	5,	4,	5,	4,	4,	5,	4,	5,	5,	5,	5,	3,	5,	3,	3,	3,	5,	1,	1,	4,	5,	4,	4,	4,	4,	3,	3,	5,	4,	5,	5,	4,	4,	4,	5,	5,	4,	4,	5,	5,	5,	5,	4,	3,	5,	5,	5,	4,	2,	3,	5,	5,	1],
								 [	3,	5,	4,	5,	4,	3,	5,	3,	1,	4,	4,	4,	4,	5,	4,	5,	5,	5,	5,	5,	5,	4,	4,	4,	4,	5,	4,	4,	3,	3,	4,	5,	5,	4,	5,	1,	5,	5,	4,	4,	5,	5,	3,	2,	3,	5,	3,	5,	5,	3,	4,	4,	5,	5,	4,	3,	4,	4,	3,	1,	4,	4,	5,	4,	5,	5,	4,	4,	4,	3,	1,	4,	3,	4,	5,	1,	5,	5,	5,	5,	5,	5,	5,	5,	3,	4,	4,	5,	1],
								 [	2,	4,	5,	5,	1,	2,	1,	5,	4,	1,	3,	4,	4,	5,	4,	5,	1,	5,	5,	5,	4,	4,	1,	1,	4,	5,	4,	4,	5,	5,	3,	3,	5,	4,	5,	4,	4,	5,	5,	5,	5,	5,	3,	4,	4,	4,	5,	5,	1,	4,	3,	5,	5,	2,	4,	4,	4,	3,	5,	4,	4,	4,	5,	4,	2,	5,	3,	5,	4,	3,	3,	4,	3,	4,	5,	3,	5,	4,	4,	5,	5,	5,	5,	5,	5,	5,	5,	4,	3],
								 [	4,	4,	4,	4,	5,	3,	3,	5,	4,	4,	1,	3,	4,	5,	5,	4,	5,	5,	5,	4,	4,	4,	4,	2,	4,	5,	3,	5,	4,	4,	4,	5,	5,	5,	5,	1,	4,	4,	5,	5,	4,	5,	4,	5,	5,	5,	5,	4,	4,	5,	3,	5,	5,	1,	4,	4,	4,	4,	5,	5,	5,	4,	5,	4,	4,	4,	3,	5,	4,	4,	4,	4,	4,	3,	5,	3,	5,	5,	5,	5,	5,	5,	5,	5,	5,	4,	5,	5,	3],
								 [	5,	4,	4,	5,	5,	3,	5,	5,	4,	4,	1,	4,	5,	4,	5,	5,	5,	5,	5,	5,	5,	4,	4,	4,	4,	5,	5,	4,	2,	3,	4,	4,	5,	5,	5,	4,	5,	4,	4,	5,	5,	5,	1,	4,	5,	5,	5,	5,	5,	4,	4,	4,	5,	3,	3,	3,	4,	4,	4,	4,	5,	4,	5,	4,	5,	5,	4,	5,	4,	4,	5,	4,	4,	1,	5,	4,	5,	5,	5,	5,	5,	5,	5,	4,	4,	5,	5,	5,	4],
								 [	4,	3,	3,	5,	4,	4,	3,	4,	2,	4,	1,	4,	4,	5,	5,	1,	5,	5,	5,	5,	5,	4,	3,	4,	3,	3,	1,	4,	3,	3,	4,	4,	3,	4,	1,	2,	4,	2,	4,	1,	5,	5,	3,	3,	3,	5,	4,	2,	3,	3,	4,	4,	1,	1,	2,	2,	4,	4,	3,	3,	4,	3,	3,	1,	5,	4,	1,	5,	1,	3,	1,	1,	4,	4,	5,	3,	5,	2,	5,	4,	5,	5,	2,	4,	4,	3,	5,	5,	3],
								 [	5,	5,	5,	5,	5,	4,	5,	5,	4,	4,	5,	4,	4,	5,	5,	5,	5,	5,	5,	4,	5,	5,	5,	4,	4,	5,	3,	5,	3,	4,	5,	4,	5,	5,	5,	5,	5,	4,	5,	5,	5,	4,	4,	5,	5,	5,	5,	4,	5,	5,	3,	5,	5,	5,	4,	4,	4,	4,	5,	5,	4,	5,	5,	5,	5,	5,	4,	5,	4,	4,	5,	5,	4,	4,	4,	3,	5,	5,	5,	4,	5,	5,	5,	3,	4,	5,	5,	5,	3],
								 [	1,	1,	4,	5,	2,	2,	4,	4,	3,	5,	2,	4,	4,	5,	5,	3,	2,	4,	4,	3,	5,	3,	3,	4,	4,	5,	4,	4,	3,	3,	4,	5,	4,	1,	5,	4,	5,	5,	5,	4,	5,	5,	4,	4,	3,	5,	3,	5,	5,	4,	3,	4,	5,	1,	4,	4,	3,	4,	4,	4,	5,	5,	5,	4,	5,	5,	3,	2,	4,	4,	4,	4,	1,	4,	5,	4,	5,	4,	3,	4,	5,	5,	5,	2,	2,	5,	5,	5,	2],
								 [	2,	4,	2,	1,	2,	3,	4,	1,	3,	5,	2,	2,	3,	4,	5,	5,	5,	5,	5,	4,	5,	4,	1,	5,	2,	4,	4,	1,	3,	3,	4,	5,	4,	4,	4,	1,	4,	1,	5,	1,	5,	5,	1,	1,	1,	4,	1,	4,	5,	2,	4,	3,	5,	1,	4,	4,	1,	4,	4,	3,	4,	2,	3,	3,	4,	5,	3,	1,	3,	2,	3,	3,	2,	3,	5,	2,	4,	3,	4,	5,	5,	5,	5,	3,	4,	1,	5,	5,	5],
								 [	3,	3,	4,	5,	4,	4,	5,	4,	4,	2,	5,	5,	3,	5,	5,	5,	5,	5,	5,	5,	5,	5,	5,	4,	5,	5,	5,	5,	4,	5,	5,	5,	4,	5,	1,	4,	4,	5,	4,	5,	5,	5,	4,	5,	5,	2,	3,	5,	5,	3,	4,	5,	5,	5,	3,	4,	3,	4,	5,	3,	4,	5,	5,	4,	4,	5,	2,	5,	5,	4,	3,	5,	4,	4,	5,	4,	5,	5,	3,	4,	5,	5,	5,	4,	4,	3,	5,	5,	1],
								 [	4,	3,	1,	3,	1,	2,	4,	1,	3,	4,	4,	1,	4,	5,	5,	5,	5,	5,	3,	5,	5,	5,	1,	3,	3,	2,	1,	5,	4,	5,	4,	1,	2,	2,	1,	1,	1,	5,	5,	5,	5,	5,	2,	4,	2,	4,	4,	1,	5,	2,	2,	5,	5,	1,	3,	3,	3,	3,	4,	4,	3,	4,	1,	4,	5,	5,	2,	5,	4,	1,	3,	3,	4,	5,	5,	3,	1,	4,	4,	4,	1,	4,	5,	4,	5,	2,	5,	4,	1],
								 [	2,	4,	3,	5,	5,	2,	4,	5,	5,	4,	2,	4,	3,	4,	4,	5,	5,	5,	5,	4,	5,	3,	1,	5,	3,	4,	4,	5,	4,	5,	4,	3,	5,	5,	5,	4,	2,	5,	5,	5,	5,	5,	3,	2,	4,	5,	5,	4,	5,	4,	3,	4,	5,	5,	4,	4,	4,	4,	5,	2,	5,	5,	5,	3,	5,	5,	4,	5,	4,	4,	3,	4,	2,	4,	5,	3,	5,	4,	5,	4,	5,	5,	5,	5,	5,	3,	5,	5,	2],
								 [	3,	3,	3,	5,	5,	2,	5,	4,	5,	4,	5,	4,	4,	5,	5,	3,	5,	5,	4,	4,	5,	5,	5,	5,	5,	5,	5,	5,	5,	5,	4,	5,	5,	4,	5,	1,	5,	4,	5,	1,	5,	5,	5,	5,	5,	5,	5,	5,	4,	5,	3,	5,	5,	4,	5,	4,	4,	1,	5,	5,	4,	5,	5,	4,	5,	5,	5,	5,	4,	4,	3,	4,	4,	4,	5,	4,	5,	5,	5,	5,	5,	5,	5,	5,	5,	3,	5,	5,	5],
								 [	4,	5,	3,	5,	4,	4,	4,	4,	3,	5,	5,	5,	3,	5,	5,	5,	5,	5,	5,	5,	3,	4,	1,	5,	4,	5,	4,	4,	4,	4,	2,	5,	4,	4,	4,	1,	5,	3,	5,	5,	5,	5,	1,	3,	4,	5,	5,	5,	3,	4,	3,	5,	5,	3,	3,	3,	4,	4,	3,	4,	4,	5,	5,	4,	5,	5,	3,	5,	4,	4,	3,	4,	4,	1,	5,	3,	5,	5,	3,	5,	5,	5,	5,	3,	4,	5,	5,	5,	1],
								 [	2,	3,	3,	2,	5,	2,	4,	1,	2,	4,	1,	4,	4,	4,	5,	5,	5,	5,	2,	5,	1,	3,	3,	4,	4,	1,	5,	4,	3,	3,	3,	3,	5,	5,	1,	4,	4,	1,	3,	4,	4,	3,	1,	1,	5,	3,	3,	5,	4,	1,	4,	4,	5,	1,	4,	4,	4,	4,	5,	5,	4,	4,	5,	3,	5,	5,	3,	1,	3,	4,	3,	4,	4,	1,	4,	4,	5,	4,	4,	5,	5,	5,	5,	4,	3,	2,	5,	5,	3],
								 [	4,	4,	3,	5,	2,	4,	5,	5,	4,	4,	4,	5,	5,	4,	5,	5,	4,	5,	5,	4,	5,	4,	4,	5,	4,	5,	5,	4,	5,	5,	5,	5,	2,	5,	2,	5,	4,	5,	5,	5,	5,	5,	4,	2,	5,	5,	4,	5,	5,	5,	3,	5,	5,	5,	4,	1,	2,	4,	2,	1,	4,	5,	5,	4,	5,	4,	5,	4,	3,	5,	3,	4,	4,	1,	5,	3,	5,	5,	4,	5,	5,	5,	4,	3,	5,	3,	5,	4,	1],
								 [	2,	5,	3,	4,	3,	4,	4,	3,	3,	5,	5,	5,	5,	4,	3,	5,	5,	5,	3,	5,	4,	4,	2,	5,	4,	4,	4,	5,	3,	3,	4,	3,	4,	4,	5,	5,	4,	5,	5,	5,	5,	5,	5,	3,	2,	4,	2,	5,	5,	5,	4,	4,	5,	5,	4,	3,	3,	4,	5,	5,	5,	5,	5,	4,	5,	4,	5,	5,	3,	4,	3,	3,	2,	2,	5,	3,	5,	5,	4,	5,	5,	5,	2,	3,	4,	3,	5,	4,	1],
								 [	4,	4,	3,	5,	4,	3,	4,	3,	2,	5,	3,	4,	4,	5,	4,	1,	5,	5,	5,	4,	5,	3,	3,	5,	3,	4,	5,	5,	4,	3,	4,	5,	4,	5,	5,	5,	5,	4,	5,	4,	5,	5,	4,	3,	4,	5,	5,	5,	5,	5,	4,	5,	5,	4,	4,	3,	3,	3,	4,	5,	5,	5,	5,	4,	5,	5,	3,	5,	3,	5,	3,	4,	3,	5,	4,	4,	5,	2,	5,	5,	5,	5,	5,	3,	4,	4,	5,	1,	5],
								 [	1,	2,	3,	1,	4,	3,	5,	5,	5,	4,	5,	5,	4,	4,	5,	2,	2,	5,	5,	2,	5,	1,	5,	5,	4,	5,	2,	5,	2,	5,	5,	5,	2,	5,	5,	5,	2,	1,	5,	5,	5,	5,	3,	5,	4,	4,	5,	5,	4,	1,	2,	5,	1,	5,	2,	5,	4,	2,	5,	5,	5,	4,	5,	2,	2,	5,	5,	4,	4,	1,	3,	5,	3,	4,	5,	2,	5,	5,	4,	5,	5,	4,	5,	4,	3,	3,	1,	5,	1],
								 [	4,	4,	3,	2,	3,	3,	4,	4,	3,	4,	2,	2,	4,	5,	5,	4,	5,	5,	3,	3,	5,	2,	4,	4,	4,	4,	3,	5,	4,	5,	4,	4,	5,	5,	5,	5,	5,	1,	2,	1,	2,	4,	1,	3,	1,	5,	4,	5,	5,	4,	3,	4,	1,	4,	4,	5,	4,	2,	4,	3,	5,	2,	5,	4,	5,	5,	4,	5,	3,	2,	3,	5,	4,	2,	5,	4,	5,	4,	4,	5,	5,	4,	5,	3,	5,	3,	5,	5,	5],
								 [	4,	4,	3,	5,	3,	2,	4,	5,	4,	3,	1,	4,	4,	5,	5,	5,	5,	4,	4,	5,	5,	4,	4,	4,	4,	3,	3,	5,	2,	3,	1,	5,	4,	4,	5,	4,	5,	4,	5,	5,	5,	5,	1,	4,	4,	4,	5,	3,	5,	5,	4,	5,	5,	5,	3,	1,	4,	4,	5,	5,	4,	4,	5,	5,	3,	5,	5,	5,	4,	4,	3,	4,	4,	4,	5,	3,	5,	5,	4,	5,	5,	5,	5,	2,	4,	3,	5,	5,	5],
								 [	3,	4,	3,	5,	3,	2,	5,	4,	4,	5,	5,	2,	4,	5,	5,	4,	5,	3,	5,	5,	5,	3,	5,	4,	4,	5,	5,	5,	4,	3,	5,	5,	5,	5,	5,	5,	5,	4,	5,	3,	5,	4,	5,	2,	5,	5,	5,	5,	5,	4,	3,	5,	5,	5,	4,	5,	4,	5,	5,	4,	4,	5,	5,	4,	5,	5,	5,	4,	4,	4,	3,	2,	3,	5,	5,	4,	5,	5,	4,	5,	5,	5,	5,	2,	4,	3,	5,	5,	5],
								 [	4,	5,	3,	5,	4,	4,	5,	4,	4,	4,	2,	5,	5,	5,	5,	4,	5,	4,	5,	5,	2,	3,	5,	3,	3,	3,	4,	5,	4,	5,	5,	5,	4,	4,	5,	4,	5,	5,	5,	4,	5,	5,	1,	5,	5,	4,	5,	2,	5,	4,	4,	5,	5,	5,	4,	5,	5,	4,	5,	4,	5,	5,	5,	5,	4,	5,	3,	5,	4,	4,	3,	5,	4,	5,	5,	4,	5,	5,	5,	5,	5,	5,	5,	1,	5,	5,	5,	5,	5],
								 [	3,	3,	3,	5,	1,	3,	4,	1,	4,	5,	3,	1,	3,	5,	5,	5,	5,	5,	2,	5,	5,	3,	1,	5,	3,	2,	3,	5,	4,	3,	3,	4,	5,	5,	3,	3,	4,	1,	1,	4,	5,	5,	5,	3,	4,	5,	5,	4,	4,	3,	3,	5,	5,	4,	3,	4,	3,	4,	5,	5,	4,	4,	5,	4,	5,	3,	3,	1,	4,	4,	3,	4,	4,	3,	4,	2,	5,	3,	5,	4,	5,	4,	5,	3,	1,	4,	5,	5,	4],
								 [	1,	4,	3,	5,	3,	3,	3,	4,	2,	4,	3,	4,	4,	3,	5,	4,	1,	5,	4,	4,	5,	3,	4,	5,	4,	5,	4,	5,	3,	5,	5,	5,	3,	5,	5,	5,	5,	5,	4,	4,	5,	5,	5,	5,	5,	5,	5,	5,	5,	2,	3,	5,	5,	5,	4,	2,	4,	4,	5,	2,	5,	5,	5,	3,	5,	5,	1,	5,	4,	1,	3,	5,	5,	4,	5,	4,	5,	5,	4,	5,	5,	4,	5,	3,	5,	4,	5,	3,	1],
								 [	4,	4,	3,	3,	4,	2,	3,	5,	1,	4,	3,	5,	4,	4,	5,	5,	5,	2,	5,	5,	5,	3,	5,	1,	4,	3,	5,	5,	3,	4,	4,	5,	3,	4,	5,	4,	5,	5,	5,	1,	5,	5,	4,	2,	3,	5,	5,	5,	5,	3,	3,	5,	5,	3,	3,	2,	1,	4,	4,	4,	5,	4,	5,	3,	5,	5,	4,	5,	3,	4,	3,	4,	4,	3,	5,	4,	5,	3,	4,	5,	5,	5,	5,	3,	5,	3,	4,	5,	5],
								 [	1,	5,	3,	5,	2,	2,	5,	5,	3,	5,	1,	5,	3,	4,	5,	4,	5,	4,	5,	1,	5,	3,	3,	4,	4,	4,	5,	1,	3,	4,	2,	5,	5,	5,	5,	4,	5,	4,	5,	3,	5,	5,	1,	1,	1,	5,	5,	5,	5,	3,	4,	5,	5,	5,	4,	3,	3,	4,	5,	4,	5,	4,	5,	5,	4,	5,	3,	5,	3,	4,	3,	4,	4,	3,	5,	3,	5,	4,	4,	5,	5,	5,	5,	3,	5,	1,	5,	4,	5],
								 [	4,	4,	3,	4,	4,	3,	5,	5,	5,	4,	5,	5,	4,	5,	1,	3,	3,	5,	5,	5,	5,	3,	4,	4,	4,	5,	5,	5,	3,	4,	5,	3,	3,	5,	5,	5,	5,	4,	5,	4,	5,	5,	4,	5,	5,	4,	5,	5,	5,	4,	3,	5,	5,	5,	5,	5,	3,	5,	5,	5,	5,	5,	5,	5,	5,	5,	4,	5,	4,	4,	3,	4,	5,	3,	5,	5,	5,	5,	3,	5,	5,	5,	5,	3,	3,	3,	5,	4,	5],
								 [	2,	5,	3,	5,	5,	3,	5,	5,	4,	5,	3,	4,	4,	4,	4,	4,	3,	5,	3,	5,	2,	3,	5,	5,	4,	5,	5,	5,	3,	5,	4,	5,	4,	4,	5,	4,	5,	4,	5,	4,	5,	5,	5,	4,	5,	5,	4,	2,	5,	4,	4,	5,	5,	5,	3,	4,	4,	4,	3,	5,	2,	3,	4,	5,	5,	5,	3,	5,	4,	4,	3,	4,	5,	3,	5,	4,	5,	5,	3,	5,	5,	5,	5,	3,	4,	4,	4,	4,	5],
								 [	3,	4,	3,	5,	5,	2,	5,	3,	3,	5,	1,	4,	4,	5,	5,	4,	4,	5,	5,	5,	5,	3,	3,	5,	4,	5,	4,	5,	4,	3,	4,	5,	4,	4,	4,	4,	2,	5,	5,	5,	5,	4,	4,	4,	5,	2,	5,	5,	4,	4,	4,	5,	5,	5,	3,	5,	4,	4,	3,	4,	5,	3,	4,	4,	5,	5,	3,	5,	3,	4,	3,	3,	4,	3,	5,	4,	5,	3,	5,	5,	5,	5,	5,	3,	4,	4,	4,	5,	5]
                                                                                                                                                                                                                                                                                                                                                                                                                                                            
];
                //70 items (0/69)       
var rating = [//    02	03	04	05	06	07	08	09	10	11	12	13	14	14b	14c	14d	15	15b	15c	15d	16	17	18	19	20	21	22	23	24	24b	24c	24d	25	26	27	27b	27c	27d	28	28b	28c	28d	29	30	31	32	32b	32c	32d	33	34	35	36	37	38	38b	38c	38d	39	39b	39c	39d	40	40b	40c	40d	41	42	43	45	46	47	47b	48	49	50	52	53	54	54b	55	56	56b	58b	59	59b	60	61	63
				 [	6,	4,	6,	9,	11,	5,	6,	8,	10,	7,	6,	5,	7,	9,	7,	5,	5,	6,	7,	7,	6,	7,	11,	7,	10,	6,	11,	7,	7,	8,	4,	5,	9,	7,	5,	3,	10, 8,  3,	6,	5,	8,	10,	8,	6,	8,	10,	11,	8,	9,	4,	4,	1,	8,	4,	6,	7,	5,	11,	4,	8,	8,	10,	6,	10,	8,	8,	7,	9,	4,	8,	5,	7,	8,	7,	6,	6,	8,	9,	10,	8,	8,	9,	6,	6,	8,	6,	1,	5],
				 [	6,	10,	6,	2,	8,	7,	8,	4,	6,	4,	6,	5,	7,	4,	5,	8,	6,	7,	9,	7,	8,	6,	6,	4,	11,	8,	3,	5,	11,	7,	8,	5,	8,	7,	2,	9,	3,  10, 6,	9,	7,	3,	9,	8,	5,	7,	9,	8,	9,	6,	5,	11,	1,	1,	3,	4,	4,	8,	4,	5,	7,	8,	9,	8,	11,	9,	9,	8,	8,	3,	6,	1,	3,	9,	6,	2,	6,	6,	11,	8,	6,	6,	11,	7,	1,	6,	1,	8,	7],
				 [	6,	2,	2,	2,	8,	7,	9,	7,	7,	8,	6,	5,	6,	7,	5,	5,	7,	7,	7,	7,	5,	6,	6,	5,	8,	5,	4,	2,	5,	8,	9,	4,	2,	9,	8,	5,	7,  5,	7,	9,	7,	5,	8,	9,	4,	2,	8,	10,	2,	6,	3,	5,	7,	6,	3,	3,	3,	4,	3,	6,	11,	5,	7,	9,	11,	8,	8,	7,	5,	3,	3,	3,	3,	6,	2,	5,	6,	6,	10,	9,	8,	4,	10,	6,	6,	7,	5,	6,	7],
				 [	6,	3,	9,	9,	9,	5,	7,	7,	5,	7,	2,	3,	5,	9,	7,	3,	6,	7,	7,	3,	5,	6,	7,	7,	7,	3,	5,	1,	3,	5,	9,	8,	4,	6,	9,	11, 10, 8,	7,	4,	5,	4,	4,	8,	6,	2,	10,	9,	3,	7,	2,	5,	1,	5,	6,	7,	9,	4,	5,	6,	8,	6,	8,	10,	9,	8,	6,	5,	5,	3,	1,	4,	9,	2,	1,	2,	6,	2,	8,	8,	8,	3,	9,	6,	6,	7,	1,	1,	1],
				 [	11,	8,	8,	11,	11,	7,	9,	8,	9,	9,	8,	11,	11,	10,	5,	9,	8,	7,	5,	9,	8,	8,	10,	5,	8,	7,	8,	7,	6,	4,	3,	4,	6,	10,	9,	11,	9,  11,	5,	7,	8,	5,	8,	10,	10,	9,	11,	8,	8,	10,	8,	9,	7,	11,	8,	6,	4,	10,	7,	7,	4,	8,	11,	9,	8,	11,	7,	11,	7,	7,	11,	9,	8,	8,	10,	11,	11,	8,	10,	10,	8,	9,	11,	7,	9,	5,	9,	9,	11],
				 [	8,	9,	3,	11,	4,	7,	9,	3,	8,	9,	6,	5,	8,	9,	4,	5,	7,	7,	3,	9,	9,	4,	5,	9,	7,	7,	8,	8,	3,	7,	6,	7,	11,	8,	11,	7,	3, 	9,	5,	4,	8,	7,	8,	9,	8,	10,	8,	7,	8,	6,	4,	4,	1,	11,	10,	9,	4,	4,	6,	8,	4,	7,	7,	8,	8,	10,	7,	9,	8,	9,	9,	10,	8,	2,	8,	8,	11,	2,	10,	11,	4,	10,	9,	6,	10,	6,	7,	6,	11],
				 [	6,	8,	2,	11,	5,	4,	7,	8,	4,	6,	2,	5,	5,	6,	10,	5,	7,	4,	7,	7,	3,	6,	6,	7,	8,	4,	4,	4,	8,	4,	5,	8,	6,	7,	4,	4,	11, 7,	8,	5,	5,	5,	2,	9,	4,	2,	8,	10,	9,	7,	7,	8,	1,	8,	4,	5,	3,	7,	3,	7,	8,	7,	7,	9,	9,	9,	7,	10,	5,	8,	4,	8,	4,	7,	9,	1,	11,	8,	9,	11,	7,	3,	8,	6,	8,	6,	5,	3,	6],
				 [	11,	8,	7,	11,	8,	7,	7,	3,	10,	9,	4,	9,	11,	2,	9,	3,	7,	5,	7,	5,	8,	8,	8,	6,	8,	9,	9,	7,	4,	4,	4,	8,	7,	10,	11,	1,	11, 5,	7,	7,	5,	3,	4,	9,	8,	11,	3,	10,	9,	10,	7,	9,	5,	9,	5,	6,	7,	2,	10,	4,	9,	5,	9,	10,	10,	8,	7,	8,	6,	9,	8,	7,	2,	8,	10,	10,	11,	9,	11,	7,	7,	8,	9,	6,	10,	2,	9,	8,	7],
				 [	6,	9,	2,	10,	11,	7,	9,	3,	9,	9,	3,	8,	8,	5,	4,	9,	7,	7,	9,	5,	7,	6,	8,	7,	8,	9,	7,	10,	7,	4,	6,	7,	9,	8,	11,	7,	7, 	8,	5,	9,	7,	5,	10,	9,	8,	5,	8,	9,	9,	10,	8,	9,	2,	8,	9,	4,	4,	9,	5,	8,	4,	8,	10,	9,	8,	10,	6,	7,	7,	8,	3,	9,	7,	5,	9,	8,	11,	6,	11,	9,	7,	9,	9,	7,	8,	6,	8,	8,	9],
				 [	6,	2,	1,	2,	2,	7,	5,	4,	7,	7,	3,	4,	3,	7,	5,	8,	5,	5,	9,	7,	4,	6,	7,	4,	7,	6,	5,	1,	6,	3,	6,	8,	4,	7,	1,	8,	7, 	10,	6,	5,	8,	5,	11,	8,	9,	2,	10,	8,	9,	6,	2,	2,	1,	4,	4,	10,	4,	7,	3,	5,	5,	5,	5,	9,	8,	10,	8,	3,	6,	2,	6,	2,	8,	4,	6,	8,	6,	7,	8,	11,	9,	3,	11,	9,	6,	8,	8,	7,	6],
				 [	6,	4,	2,	9,	8,	7,	9,	3,	5,	8,	1,	2,	8,	5,	7,	5,	9,	7,	7,	8,	7,	5,	6,	6,	6,	6,	4,	5,	3,	6,	10,	6,	4,	4,	5,	8,	9, 	10,	5,	8,	5,	7,	7,	8,	6,	8,	3,	8,	11,	6,	4,	5,	7,	4,	5,	3,	4,	5,	4,	6,	5,	7,	6,	7,	9,	10,	5,	7,	5,	3,	3,	3,	4,	1,	9,	8,	6,	6,	10,	10,	6,	4,	9,	6,	9,	6,	2,	1,	7],
				 [	6,	4,	6,	3,	4,	7,	8,	4,	9,	6,	5,	5,	7,	5,	2,	9,	5,	4,	7,	11,	7,	6,	9,	6,	10,	6,	4,	8,	5,	4,	8,	7,	8,	8,	1,	3,	7, 	11,	5,	5,	7,	4,	8,	8,	6,	5,	1,	2,	10,	6,	5,	11,	1,	7,	4,	8,	3,	8,	6,	1,	5,	6,	8,	4,	7,	5,	8,	6,	5,	3,	4,	3,	3,	3,	8,	6,	6,	9,	7,	9,	8,	7,	9,	6,	7,	3,	7,	7,	3],
				 [	6,	9,	7,	10,	7,	4,	8,	4,	4,	7,	4,	3,	9,	5,	8,	7,	7,	6,	7,	5,	4,	6,	6,	7,	7,	6,	4,	1,	8,	7,	6,	7,	6,	6,	5,	4,	8, 	5,	8,	7,	7,	3,	3,	9,	5,	3,	8,	8,	9,	6,	7,	7,	1,	8,	2,	6,	4,	4,	4,	4,	6,	8,	4,	10,	7,	10,	7,	10,	4,	9,	3,	8,	3,	1,	9,	2,	9,	5,	9,	10,	6,	2,	9,	6,	7,	4,	3,	3,	6],
				 [	6,	8,	2,	3,	7,	7,	8,	2,	5,	6,	6,	3,	5,	5,	5,	5,	7,	4,	6,	7,	5,	6,	6,	6,	7,	6,	7,	5,	5,	7,	8,	6,	8,	6,	2,	7,	7, 	11,	8,	6,	7,	4,	7,	8,	7,	7,	1,	8,	9,	6,	5,	4,	1,	1,	4,	5,	4,	3,	7,	6,	7,	7,	5,	7,	8,	10,	6,	6,	4,	3,	6,	9,	3,	1,	6,	3,	6,	3,	8,	9,	6,	8,	9,	6,	8,	1,	2,	3,	6],
				 [	4,	8,	9,	8,	10,	9,	7,	10,	5,	8,	7,	7,	8,	10,	4,	4,	7,	7,	8,	9,	7,	8,	9,	4,	9,	9,	10,	1,	6,	5,	5,	6,	7,	7,	9,	10,	7, 	11,	5,	7,	7,	7,	7,	4,	8,	10,	9,	8,	9,	4,	5,	5,	7,	8,	9,	10,	4,	10,	10,	4,	7,	8,	7,	10,	8,	11,	8,	4,	7,	7,	9,	6,	7,	3,	10,	8,	9,	4,	10,	9,	9,	8,	11,	10,	10,	8,	6,	8,	8],
				 [	10,	8,	8,	9,	7,	7,	6,	11,	8,	8,	6,	9,	9,	5,	4,	5,	7,	7,	7,	5,	9,	8,	10,	3,	8,	9,	9,	8,	4,	6,	5,	9,	11,	8,	5,	9,	7, 	7,	8,	4,	8,	4,	8,	6,	9,	5,	9,	8,	9,	5,	4,	7,	10,	5,	8,	4,	4,	3,	6,	5,	7,	11,	11,	7,	8,	11,	6,	9,	8,	8,	3,	5,	4,	1,	10,	7,	11,	8,	11,	10,	5,	9,	9,	10,	9,	5,	3,	9,	7],
				 [	6,	7,	3,	9,	3,	8,	9,	2,	5,	7,	6,	5,	5,	9,	3,	4,	5,	7,	5,	6,	5,	7,	7,	6,	8,	9,	1,	2,	10,	5,	7,	11,	4,	10,	1,	4,	7, 	4,	7,	5,	8,	3,	10,	8,	6,	4,	8,	3,	8,	6,	4,	11,	1,	11,	2,	11,	5,	2,	3,	4,	3,	5,	4,	6,	8,	10,	5,	9,	5,	3,	3,	8,	4,	8,	10,	4,	6,	7,	8,	9,	6,	7,	9,	6,	7,	7,	1,	7,	5],
				 [	11,	9,	8,	11,	11,	7,	9,	9,	9,	9,	10,	11,	10,	5,	6,	3,	10,	7,	9,	5,	6,	8,	9,	9,	7,	10,	11,	8,	9,	3,	8,	6,	11,	10,	11,	2,	9, 	9,	8,	5,	7,	4,	4,	9,	11,	10,	4,	7,	3,	10,	3,	8,	10,	9,	11,	9,	6,	3,	10,	4,	6,	4,	11,	6,	10,	10,	8,	9,	9,	10,	9,	5,	1,	9,	10,	11,	11,	9,	10,	8,	8,	7,	8,	6,	10,	1,	8,	7,	9],
				 [	9,	11,	11,	9,	11,	7,	9,	3,	8,	6,	5,	7,	11,	7,	7,	4,	9,	6,	7,	7,	10,	10,	9,	10,	8,	11,	8,	10,	9,	6,	7,	4,	10,	10,	11,	7,	10, 9,	5,	4,	3,	7,	10,	8,	10,	11,	10,	9,	3,	9,	8,	7,	8,	11,	10,	3,	7,	3,	6,	7,	10,	5,	10,	7,	9,	8,	6,	9,	9,	9,	9,	7,	3,	8,	9,	10,	11,	10,	11,	8,	7,	11,	9,	6,	10,	3,	3,	10,	8],
				 [	6,	7,	3,	3,	9,	7,	9,	5,	6,	10,	2,	3,	6,	7,	4,	10,	7,	7,	8,	8,	8,	6,	5,	7,	7,	5,	7,	5,	5,	4,	7,	5,	9,	5,	7,	3,	10, 11,	10,	5,	5,	5,	7,	11,	8,	10,	10,	9,	10,	5,	4,	4,	1,	8,	4,	7,	5,	9,	9,	4,	5,	9,	8,	11,	8,	11,	4,	7,	4,	3,	10,	10,	4,	1,	7,	7,	6,	3,	10,	10,	7,	7,	8,	7,	8,	9,	3,	3,	7],
				 [	6,	5,	3,	6,	8,	5,	8,	2,	5,	9,	6,	8,	7,	7,	2,	6,	6,	9,	7,	8,	8,	6,	7,	6,	8,	7,	4,	7,	5,	10,	4,	4,	10,	8,	11,	9,	1, 	11,	7,	7,	5,	5,	9,	8,	8,	9,	10,	3,	10,	6,	4,	8,	1,	7,	7,	10,	5,	10,	4,	5,	3,	7,	9,	8,	7,	9,	9,	6,	7,	3,	6,	8,	3,	3,	8,	5,	6,	7,	10,	10,	7,	4,	11,	9,	8,	10,	9,	8,	7],
				 [	6,	3,	9,	8,	9,	5,	9,	8,	8,	7,	5,	8,	7,	10,	2,	4,	5,	11,	7,	7,	8,	7,	10,	4,	8,	6,	6,	5,	7,	10,	7,	8,	10,	8,	11,	8,	3, 	7,	4,	5,	5,	8,	10,	3,	10,	5,	11,	5,	2,	7,	3,	5,	1,	8,	8,	10,	5,	3,	10,	4,	4,	8,	10,	7,	8,	8,	7,	6,	7,	2,	7,	4,	3,	4,	2,	3,	6,	10,	10,	11,	9,	7,	11,	9,	7,	9,	8,	7,	4],
				 [	6,	9,	6,	11,	9,	7,	9,	10,	8,	11,	8,	11,	8,	10,	10,	8,	7,	7,	11,	7,	10,	11,	7,	7,	7,	10,	1,	10,	6,	5,	9,	9,	10,	8,	10,	7,	11, 9,	7,	5,	5,	5,	11,	8,	10,	11,	10,	11,	8,	10,	7,	9,	4,	8,	7,	10,	10,	8,	5,	2,	9,	6,	11,	6,	10,	11,	9,	6,	6,	10,	2,	5,	8,	8,	9,	7,	6,	9,	10,	11,	6,	10,	9,	8,	9,	8,	6,	6,	6],
				 [	6,	8,	7,	1,	8,	8,	7,	11,	4,	7,	6,	5,	6,	7,	5,	4,	4,	8,	7,	7,	6,	6,	8,	7,	7,	9,	7,	8,	4,	7,	7,	8,	1,	7,	9,	11,	8, 	4,	5,	5,	5,	8,	8,	8,	6,	1,	9,	10,	2,	6,	4,	9,	1,	7,	5,	8,	4,	5,	4,	4,	4,	6,	5,	10,	8,	7,	5,	5,	5,	3,	8,	2,	4,	8,	9,	8,	6,	6,	8,	10,	9,	6,	11,	8,	7,	9,	6,	8,	8],
				 [	8,	10,	8,	5,	4,	9,	9,	4,	8,	9,	11,	3,	10,	5,	7,	5,	9,	6,	7,	7,	7,	6,	8,	7,	9,	4,	9,	1,	8,	7,	7,	6,	8,	6,	10,	9,	10, 4,	5,	8,	5,	5,	6,	10,	9,	10,	3,	9,	8,	7,	5,	7,	7,	8,	7,	4,	7,	4,	7,	6,	6,	5,	9,	8,	10,	7,	7,	11,	6,	8,	2,	8,	4,	2,	7,	1,	11,	7,	10,	8,	7,	6,	8,	7,	8,	2,	2,	1,	10],
				 [	10,	10,	6,	10,	11,	4,	9,	9,	10,	9,	10,	8,	10,	8,	4,	9,	10,	7,	8,	9,	10,	10,	10,	7,	8,	10,	7,	7,	6,	4,	3,	4,	6,	11,	11,	8,	10, 9,	8,	4,	4,	7,	10,	9,	10,	9,	11,	4,	5,	7,	9,	7,	2,	9,	6,	8,	4,	7,	6,	5,	5,	8,	8,	6,	9,	11,	4,	7,	7,	10,	8,	5,	3,	8,	11,	11,	11,	5,	11,	10,	7,	11,	9,	8,	11,	8,	3,	10,	9],
				 [	6,	3,	3,	9,	7,	5,	9,	8,	4,	8,	2,	6,	5,	9,	5,	9,	7,	11,	8,	11,	8,	7,	8,	5,	9,	3,	6,	8,	7,	7,	7,	8,	6,	7,	4,	11,	3, 	11,	8,	5,	6,	8,	3,	7,	3,	4,	10,	9,	10,	8,	5,	4,	1,	6,	4,	10,	4,	11,	5,	4,	7,	11,	10,	6,	11,	11,	6,	6,	6,	3,	1,	6,	4,	5,	3,	2,	6,	10,	9,	11,	7,	4,	11,	11,	4,	8,	5,	1,	1],
				 [	6,	7,	3,	9,	8,	9,	7,	10,	10,	10,	11,	8,	7,	4,	3,	5,	4,	7,	5,	8,	8,	8,	7,	10,	6,	10,	8,	11,	6,	6,	8,	6,	10,	10,	11,	4,	2, 	4,	3,	10,	8,	11,	11,	7,	10,	10,	2,	3,	10,	7,	9,	9,	1,	1,	10,	4,	4,	4,	9,	2,	4,	9,	10,	5,	11,	9,	4,	5,	7,	7,	11,	4,	5,	1,	6,	4,	9,	8,	10,	10,	4,	11,	7,	6,	11,	2,	7,	9,	8],
				 [	6,	4,	3,	4,	8,	8,	6,	11,	7,	7,	1,	4,	4,	4,	4,	5,	7,	4,	5,	7,	3,	6,	8,	7,	7,	9,	8,	7,	4,	4,	5,	7,	3,	10,	11,	7,	10, 11,	3,	5,	5,	7,	9,	8,	1,	1,	5,	3,	8,	6,	3,	10,	1,	9,	4,	6,	4,	7,	2,	4,	4,	7,	7,	5,	8,	11,	7,	9,	8,	3,	10,	2,	3,	4,	8,	7,	11,	7,	9,	8,	8,	2,	9,	6,	6,	1,	3,	9,	8],
				 [	6,	7,	2,	6,	7,	8,	6,	3,	4,	6,	6,	3,	5,	5,	3,	8,	7,	5,	8,	8,	7,	7,	7,	6,	7,	6,	6,	5,	3,	8,	4,	8,	6,	8,	3,	1,	5, 	9,	4,	7,	7,	4,	4,	4,	4,	3,	8,	4,	11,	6,	7,	4,	2,	8,	3,	4,	5,	6,	2,	4,	7,	6,	8,	8,	10,	11,	5,	7,	7,	2,	6,	5,	7,	3,	10,	6,	6,	8,	8,	8,	6,	7,	9,	7,	5,	5,	2,	6,	6],
				 [	6,	7,	6,	8,	5,	8,	8,	9,	4,	8,	6,	5,	5,	3,	9,	5,	4,	7,	10,	7,	7,	7,	10,	5,	10,	6,	6,	6,	9,	4,	8,	10,	6,	10,	1,	9,	10, 11,	4,	5,	7,	3,	11,	8,	5,	7,	10,	10,	10,	7,	4,	5,	1,	9,	4,	9,	7,	5,	3,	3,	7,	7,	8,	7,	9,	10,	8,	8,	5,	3,	1,	3,	8,	4,	7,	4,	6,	6,	9,	10,	9,	4,	10,	7,	7,	9,	1,	6,	5],
				 [	6,	8,	9,	3,	8,	7,	9,	10,	8,	10,	8,	8,	7,	4,	3,	5,	7,	6,	7,	4,	7,	8,	10,	7,	8,	8,	9,	9,	8,	3,	4,	6,	6,	10,	5,	9,	8, 	11,	7,	4,	4,	4,	11,	8,	7,	8,	2,	3,	10,	8,	7,	8,	1,	11,	8,	4,	3,	9,	6,	4,	3,	10,	11,	11,	8,	10,	8,	7,	7,	7,	10,	11,	9,	8,	10,	9,	6,	9,	9,	8,	9,	8,	9,	7,	10,	6,	10,	10,	7],
				 [	6,	6,	7,	2,	10,	7,	7,	9,	9,	7,	7,	7,	7,	5,	7,	5,	5,	4,	8,	5,	3,	8,	10,	4,	7,	9,	11,	9,	10,	9,	7,	10,	8,	9,	3,	11,	11, 4,	8,	7,	6,	3,	11,	8,	7,	8,	8,	4,	8,	7,	7,	10,	7,	11,	4,	5,	5,	4,	5,	2,	6,	5,	9,	8,	10,	10,	8,	6,	7,	2,	9,	10,	7,	7,	9,	8,	4,	8,	7,	7,	9,	7,	9,	6,	9,	7,	11,	9,	6],
				 [	10,	10,	10,	11,	7,	4,	8,	8,	5,	8,	8,	5,	6,	8,	7,	5,	5,	5,	5,	7,	5,	6,	9,	9,	7,	5,	7,	5,	7,	6,	7,	8,	11,	4,	9,	4,	10, 9,	8,	4,	7,	5,	5,	10,	7,	8,	7,	9,	9,	3,	4,	4,	1,	11,	10,	7,	7,	6,	8,	2,	7,	8,	9,	6,	9,	11,	8,	7,	7,	5,	8,	9,	5,	1,	8,	3,	11,	7,	11,	8,	5,	8,	9,	7,	11,	6,	5,	2,	7],
				 [	4,	3,	7,	3,	4,	7,	8,	5,	9,	7,	4,	9,	8,	9,	7,	3,	7,	7,	5,	4,	9,	7,	9,	8,	8,	8,	7,	7,	7,	5,	7,	9,	11,	7,	3,	11,	11, 11,	7,	7,	5,	7,	9,	11,	10,	9,	9,	7,	8,	9,	5,	9,	8,	7,	10,	11,	7,	4,	11,	11,	10,	5,	10,	11,	9,	9,	8,	6,	8,	8,	9,	8,	6,	7,	10,	10,	8,	8,	9,	9,	7,	9,	9,	9,	6,	7,	9,	9,	7],
				 [	6,	7,	7,	3,	9,	7,	7,	10,	10,	5,	10,	5,	5,	7,	6,	9,	5,	7,	7,	6,	3,	8,	8,	5,	7,	6,	10,	4,	5,	6,	7,	8,	5,	10,	3,	4,	8, 	7,	5,	4,	7,	9,	8,	7,	8,	4,	9,	9,	8,	5,	7,	9,	3,	8,	7,	5,	4,	7,	3,	5,	4,	6,	7,	7,	8,	9,	8,	6,	6,	3,	8,	10,	8,	5,	9,	7,	6,	10,	9,	7,	9,	6,	10,	7,	8,	8,	10,	8,	6],
				 [	5,	9,	8,	10,	10,	7,	6,	11,	9,	4,	9,	8,	5,	7,	5,	7,	5,	2,	3,	5,	4,	9,	7,	7,	10,	7,	7,	9,	8,	6,	7,	8,	5,	10,	10,	9,	11, 9,	3,	7,	7,	10,	3,	5,	10,	8,	5,	8,	6,	10,	7,	10,	7,	8,	5,	7,	7,	7,	7,	3,	5,	6,	10,	8,	7,	7,	8,	6,	8,	3,	9,	9,	2,	7,	10,	6,	11,	9,	10,	9,	7,	8,	8,	10,	9,	6,	3,	7,	3],
				 [	8,	5,	7,	7,	9,	7,	5,	10,	8,	2,	9,	7,	5,	4,	10,	8,	6,	4,	7,	11,	5,	7,	8,	7,	10,	6,	10,	11,	5,	4,	5,	8,	9,	8,	3,	2,	8, 	8,	4,	5,	9,	8,	6,	4,	7,	9,	4,	2,	1,	9,	7,	10,	1,	8,	7,	3,	1,	5,	5,	7,	3,	5,	8,	10,	6,	8,	7,	6,	8,	7,	10,	7,	8,	4,	8,	6,	8,	8,	9,	9,	9,	8,	10,	6,	10,	6,	9,	7,	6],
				 [	6,	6,	8,	8,	7,	6,	9,	8,	9,	8,	11,	8,	8,	6,	10,	10,	6,	6,	7,	6,	7,	9,	10,	8,	11,	9,	2,	6,	8,	6,	8,	7,	7,	8,	3,	7,	9, 	10,	7,	5,	10,	8,	5,	8,	7,	10,	1,	8,	8,	9,	9,	9,	8,	7,	5,	3,	5,	7,	7,	6,	9,	6,	9,	9,	9,	10,	7,	6,	8,	5,	5,	9,	7,	5,	9,	7,	9,	7,	8,	9,	7,	8,	8,	6,	8,	7,	9,	7,	6],
				 [	6,	9,	8,	9,	5,	7,	9,	10,	5,	10,	5,	7,	10,	8,	3,	11,	7,	10,	7,	6,	6,	8,	3,	8,	10,	9,	8,	7,	7,	7,	6,	8,	7,	10,	7,	4,	5,	8,	9,	7,	7,	11,	9,	9,	9,	5,	8,	9,	7,	6,	8,	7,	9,	11,	4,	5,	3,	8,	9,	6,	5,	6,	7,	8,	8,	8,	7,	11,	8,	3,	7,	10,	9,	8,	9,	9,	11,	9,	9,	8,	8,	9,	8,	9,	11,	7,	9,	8,	5],
				 [	6,	4,	3,	7,	8,	4,	7,	2,	4,	7,	6,	7,	7,	11,	7,	7,	7,	8,	7,	10,	8,	10,	11,	6,	9,	6,	6,	1,	6,	8,	5,	8,	6,	4,	6,	7,	7, 	1,	4,	9,	10,	8,	7,	6,	6,	7,	9,	4,	1,	6,	8,	4,	5,	6,	2,	4,	7,	2,	6,	6,	5,	5,	6,	10,	6,	7,	7,	6,	4,	3,	6,	5,	9,	6,	8,	7,	6,	9,	7,	9,	6,	8,	7,	8,	7,	9,	6,	6,	5],
				 [	6,	8,	3,	6,	3,	6,	8,	1,	5,	7,	6,	5,	4,	5,	10,	8,	7,	7,	5,	6,	4,	6,	5,	6,	6,	7,	1,	1,	3,	5,	7,	7,	3,	7,	1,	4,	9, 	8,	5,	4,	9,	10,	8,	8,	6,	1,	8,	7,	8,	6,	4,	3,	1,	6,	4,	5,	4,	5,	2,	7,	4,	5,	5,	10,	10,	8,	7,	9,	7,	2,	6,	8,	4,	7,	7,	8,	6,	8,	8,	9,	6,	7,	10,	6,	7,	6,	1,	6,	7],
				 [	6,	7,	10,	10,	4,	8,	8,	3,	8,	9,	8,	8,	8,	7,	8,	11,	7,	6,	10,	1,	7,	8,	10,	6,	9,	7,	6,	4,	6,	6,	8,	4,	9,	8,	3,	3,	4, 	8,	8,	5,	7,	8,	10,	10,	8,	7,	8,	7,	3,	6,	10,	8,	7,	1,	4,	6,	5,	8,	6,	6,	7,	6,	7,	8,	7,	6,	5,	11,	8,	3,	10,	9,	3,	8,	10,	7,	6,	10,	9,	9,	6,	7,	8,	7,	9,	8,	7,	6,	7],
				 [	9,	10,	10,	10,	4,	6,	6,	9,	9,	4,	5,	9,	10,	7,	10,	10,	7,	7,	8,	7,	8,	8,	10,	4,	9,	7,	9,	1,	9,	6,	8,	11,	5,	10,	4,	4,	8, 	8,	8,	5,	9,	9,	7,	8,	11,	11,	6,	7,	8,	5,	7,	4,	10,	9,	8,	3,	5,	8,	5,	4,	9,  5,	10,	7,	9,	8,	7,	8,	8,	10,	11,	7,	8,	4,	9,	10,	11,	8,	11,	8,	9,	7,	10,	7,	11,	6,	2,	9,	9],
				 [	9,	11,	10,	8,	4,	7,	9,	8,	6,	2,	2,	7,	9,	9,	2,	10,	8,	6,	6,	6,	8,	3,	2,	9,	9,	6,	8,	1,	5,	8,	5,	7,	11,	9,	2,	4,	4, 	5,	8,	9,	6,	9,	9,	8,	9,	1,	7,	9,	8,	6,	8,	3,	8,	6,	4,	8,	3,	9,	6,	4,	4,	7,	4,	7,	7,	9,	5,	10,	8,	3,	10,	3,	7,	7,	8,	5,	6,	9,	10,	10,	4,	9,	11,	7,	11,	6,	1,	8,	9],
				 [	6,	2,	1,	6,	1,	6,	6,	4,	5,	7,	10,	5,	5,	9,	4,	9,	7,	5,	6,	6,	3,	3,	8,	5,	6,	7,	5,	1,	4,	7,	5,	7,	4,	8,	2,	8,	4, 	10,	6,	9,	6,	9,	8,	1,	8,	8,	6,	7,	10,	6,	4,	5,	1,	6,	2,	7,	4,	4,	2,	9,	2,	5,	4,	8,	7,	7,	7,	6,	6,	2,	8,	3,	5,	4,	1,	6,	6,	7,	8,	7,	6,	5,	11,	7,	6,	8,	2,	6,	6],
				 [	6,	4,	7,	7,	4,	6,	7,	4,	7,	9,	6,	7,	8,	10,	4,	8,	6,	11,	7,	11,	6,	8,	10,	6,	10,	6,	7,	5,	6,	8,	7,	8,	6,	10,	2,	3,	3, 	1,	9,	8,	4,	9,	9,	3,	8,	8,	1,	9,	2,	6,	6,	4,	1,	5,	5,	5,	2,	3,	4,	3,	6,	4,	7,	5,	8,	8,	5,	11,	8,	3,	6,	2,	3,	7,	7,	3,	6,	9,	8,	9,	6,	9,	10,	10,	7,	10,	8,	8,	9],
				 [	9,	4,	9,	11,	7,	6,	6,	10,	7,	2,	2,	9,	7,	10,	9,	7,	9,	6,	3,	7,	8,	6,	9,	4,	9,	6,	5,	1,	8,	7,	9,	5,	5,	7,	1,	4,	7, 	8,	8,	10,	9,	7,	10,	7,	9,	1,	8,	4,	5,	2,	7,	7,	9,	11,	3,	8,	4,	5,	5,	5,	5,	9,	8,	8,	9,	10,	5,	9,	7,	10,	8,	5,	10,	7,	7,	10,	11,	6,	9,	8,	6,	8,	7,	8,	10,	7,	1,	7,	5],
				 [	6,	3,	10,	11,	4,	7,	8,	8,	5,	3,	7,	4,	5,	10,	11,	7,	7,	6,	6,	7,	5,	6,	8,	5,	8,	7,	7,	11,	6,	7,	9,	11,	3,	6,	1,	8,	4, 	3,	5,	8,	9,	5,	1,	4,	6,	10,	8,	11,	8,	5,	8,	7,	7,	7,	2,	7,	6,	4,	3,	8,	6,	4,	7,	8,	9,	6,	6,	1,	8,	2,	8,	7,	9,	2,	8,	6,	6,	7,	6,	8,	5,	7,	3,	8,	10,	8,	5,	7,	1],
				 [	9,	2,	9,	5,	11,	9,	10,	8,	10,	5,	4,	8,	9,	9,	7,	9,	10,	6,	7,	5,	7,	7,	7,	5,	11,	10,	7,	11,	6,	8,	2,	7,	2,	10,	10,	7,	3, 	7,	9,	8,	9,	7,	8,	6,	9,	10,	8,	10,	8,	9,	10,	4,	7,	6,	6,	9,	8,	4,	3,	5,	5,	7,	8,	9,	9,	9,	8,	8,	9,	8,	8,	3,	9,	5,	11,	8,	6,	8,	11,	8,	9,	10,	9,	7,	10,	8,	9,	9,	3],
				 [	6,	8,	6,	5,	4,	6,	8,	9,	7,	9,	7,	7,	10,	11,	10,	8,	3,	7,	6,	6,	5,	2,	9,	6,	8,	8,	7,	1,	8,	8,	8,	7,	7,	9,	11,	3,	4, 	5,	9,	10,	9,	7,	11,	4,	10,	5,	7,	8,	8,	6,	9,	7,	8,	7,	7,	7,	8,	5,	6,	6,	7,	5,	8,	8,	9,	8,	5,	11,	7,	5,	9,	7,	9,	8,	11,	9,	6,	9,	7,	8,	8,	8,	8,	8,	9,	7,	7,	8,	6],
				 [	6,	3,	3,	10,	5,	9,	8,	4,	6,	8,	6,	8,	7,	7,	11,	8,	7,	10,	8,	6,	6,	4,	9,	9,	9,	6,	4,	6,	8,	7,	8,	7,	7,	10,	3,	1,	8, 	7,	7,	8,	10,	7,	10,	3,	8,	8,	1,	6,	9,	6,	8,	7,	1,	10,	3,	3,	4,	4,	5,	2,	7,	5,	8,	5,	7,	10,	5,	11,	8,	4,	6,	10,	4,	8,	3,	8,	6,	9,	7,	9,	6,	7,	9,	7,	10,	7,	7,	6,	5],
				 [	6,	9,	8,	3,	10,	8,	8,	10,	8,	5,	8,	7,	11,	7,	9,	10,	5,	6,	7,	8,	6,	8,	2,	8,	8,	8,	3,	11,	6,	7,	8,	8,	6,	6,	9,	2,	8, 	9,	8,	9,	10,	10,	7,	10,	7,	4,	9,	7,	7,	6,	8,	4,	7,	11,	4,	5,	8,	7,	5,	4,	6,	9,	5,	5,	8,	7,	6,	9,	8,	3,	6,	4,	7,	4,	9,	10,	6,	9,	7,	8,	8,	8,	9,	7,	10,	9,	7,	8,	4],
				 [	7,	10,	5,	9,	8,	3,	7,	3,	7,	3,	2,	7,	7,	5,	7,	6,	7,	7,	11,	7,	9,	5,	4,	6,	6,	6,	3,	1,	9,	8,	8,	5,	3,	6,	2,	3,	2, 	7,	8,	8,	8,	5,	8,	7,	7,	6,	5,	4,	1,	4,	8,	7,	7,	7,	3,	7,	2,	5,	3,	6,	5,	3,	5,	7,	8,	7,	4,	7,	4,	4,	6,	9,	7,	3,	10,	7,	6,	7,	9,	8,	8,	6,	10,	6,	7,	7,	5,	7,	1],
				 [	10,	4,	9,	6,	4,	5,	9,	4,	7,	8,	4,	7,	9,	10,	9,	10,	4,	5,	7,	6,	7,	7,	4,	7,	9,	9,	6,	1,	5,	5,	4,	8,	5,	9,	5,	3,	4, 	8,	8,	9,	8,	9,	1,	4,	7,	4,	1,	10,	11,	6,	7,	7,	9,	4,	8,	6,	4,	7,	6,	5,	4,	4,	7,	5,	10,	8,	8,	11,	5,	3,	7,	9,	7,	4,	7,	6,	6,	6,	8,	8,	6,	6,	11,	10,	6,	6,	8,	7,	7],
				 [	9,	11,	10,	10,	10,	8,	7,	9,	8,	8,	8,	7,	11,	9,	8,	10,	5,	7,	6,	9,	9,	8,	6,	7,	10,	9,	7,	6,	9,	10,	8,	8,	9,	11,	4,	2,	4, 	7,	8,	9,	7,	9,	2,	6,	8,	9,	8,	8,	2,	2,	9,	11,	11,	6,	10,	5,	4,	4,	8,	7,	5,	5,	10,	8,	8,	7,	4,	11,	8,	9,	5,	7,	8,	7,	8,	8,	11,	10,	11,	8,	9,	7,	10,	7,	11,	8,	3,	7,	6],
				 [	10,	8,	9,	11,	7,	8,	10,	10,	7,	8,	7,	7,	11,	9,	11,	7,	4,	5,	2,	11,	9,	7,	3,	8,	6,	6,	9,	1,	8,	7,	9,	8,	8,	6,	3,	4,	11, 1,	9,	9,	10,	9,	8,	10,	7,	9,	7,	8,	1,	2,	10,	9,	1,	1,	10,	5,	9,	2,	6,	7,	7,	5,	5,	8,	7,	8,	7,	10,	8,	2,	10,	9,	3,	2,	10,	9,	6,	10,	11,	8,	5,	10,	9,	6,	9,	7,	5,	6,	7],
				 [	9,	8,	8,	10,	8,	5,	5,	10,	7,	3,	2,	11,	7,	10,	7,	4,	10,	7,	7,	7,	8,	7,	9,	9,	9,	6,	6,	1,	7,	8,	8,	7,	8,	7,	2,	5,	9,	3,	8,	8,	9,	5,	9,	6,	9,	1,	9,	7,	9,	6,	7,	7,	8,	9,	4,	9,	5,	1,	3,	4,	5,	5,	8,	5,	8,	8,	3,	10,	7,	7,	6,	3,	9,	6,	7,	10,	11,	9,	9,	8,	6,	6,	9,	8,	9,	7,	1,	7,	6],
				 [	9,	9,	9,	11,	4,	6,	5,	2,	9,	2,	3,	11,	5,	10,	10,	10,	8,	8,	7,	11,	8,	4,	6,	6,	8,	7,	8,	2,	5,	7,	8,	7,	6,	7,	1,	7,	11, 10,	7,	8,	9,	9,	9,	7,	10,	1,	8,	5,	10,	2,	8,	8,	9,	7,	7,	9,	7,	5,	4,	5,	7,	5,	6,	9,	7,	10,	5,	10,	7,	3,	9,	5,	9,	6,	10,	11,	11,	7,	9,	8,	6,	7,	9,	7,	9,	6,	1,	3,	6],
				 [	10,	9,	10,	10,	4,	8,	9,	10,	7,	10,	7,	7,	10,	9,	10,	11,	4,	7,	1,	1,	7,	6,	2,	8,	10,	8,	7,	10,	6,	8,	3,	8,	9,	10,	8,	9,	11, 11,	9,	5,	10,	10,	8,	7,	10,	4,	4,	6,	5,	6,	9,	8,	1,	3,	8,	7,	8,	7,	7,	5,	8,	6,	6,	5,	7,	8,	7,	11,	8,	3,	8,	3,	7,	8,	9,	8,	11,	9,	9,	9,	8,	6,	9,	7,	10,	7,	8,	9,	8],
				 [	6,	3,	8,	6,	3,	6,	9,	8,	9,	7,	9,	8,	9,	10,	9,	9,	6,	4,	7,	7,	7,	6,	11,	6,	9,	8,	7,	7,	6,	8,	8,	7,	6,	9,	8,	8,	7, 	7,	9,	10,	9,	8,	10,	7,	10,	8,	10,	8,	9,	6,	10,	7,	7,	11,	9,	4,	8,	4,	6,	3,	5,	6,	9,	5,	9,	9,	8,	8,	8,	3,	6,	9,	5,	8,	6,	7,	6,	10,	8,	8,	8,	6,	9,	10,	8,	9,	7,	8,	8],
				 [	6,	8,	9,	10,	3,	7,	10,	10,	7,	8,	4,	7,	10,	9,	10,	9,	6,	10,	7,	6,	7,	4,	2,	5,	9,	9,	7,	7,	7,	7,	7,	7,	7,	7,	10,	1,	10, 10,	9,	9,	9,	11,	9,	6,	9,	3,	3,	7,	8,	6,	8,	5,	7,	8,	5,	4,	8,	6,	7,	2,	7,	5,	4,	5,	7,	8,	7,	10,	8,	2,	8,	4,	3,	8,	9,	8,	6,	7,	9,	9,	6,	10,	8,	8,	10,	6,	6,	6,	5],
				 [	6,	8,	7,	8,	4,	7,	8,	6,	5,	8,	8,	7,	11,	7,	10,	8,	7,	5,	6,	7,	7,	7,	11,	6,	10,	9,	7,	1,	8,	6,	8,	9,	7,	9,	7,	4,	4, 	2,	8,	5,	7,	8,	9,	8,	8,	4,	3,	11,	8,	6,	8,	7,	7,	9,	5,	3,	6,	3,	5,	6,	5,	5,	7,	11,	10,	6,	5,	10,	8,	3,	6,	9,	4,	8,	5,	7,	6,	9,	8,	6,	6,	8,	10,	7,	8,	9,	7,	8,	8],
				 [	6,	6,	3,	8,	5,	8,	8,	2,	6,	2,	6,	6,	9,	8,	9,	11,	7,	5,	10,	5,	9,	5,	9,	5,	9,	7,	5,	1,	3,	7,	6,	9,	6,	8,	6,	3,	11, 7,	8,	5,	8,	9,	10,	1,	6,	5,	10,	8,	8,	6,	6,	7,	1,	6,	4,	5,	3,	10,	4,	5,	5,	8,	7,	6,	7,	11,	6,	10,	8,	3,	6,	7,	8,	6,	6,	9,	6,	6,	9,	8,	6,	8,	9,	7,	6,	6,	1,	6,	6],
				 [	6,	3,	8,	6,	4,	6,	7,	7,	5,	7,	9,	8,	8,	9,	6,	10,	7,	7,	6,	3,	7,	10,	10,	8,	9,	9,	2,	3,	9,	5,	6,	8,	7,	7,	8,	3,	7, 	9,	7,	4,	7,	10,	5,	6,	7,	9,	4,	8,	6,	8,	7,	10,	8,	7,	3,	5,	4,	7,	5,	3,	5,	7,	7,	6,	10,	7,	3,	9,	7,	4,	9,	8,	9,	2,	9,	7,	6,	8,	9,	8,	5,	9,	8,	8,	8,	9,	7,	6,	5],
				 [	6,	7,	7,	10,	3,	5,	5,	9,	8,	6,	8,	7,	8,	4,	6,	8,	6,	3,	7,	5,	8,	7,	8,	6,	10,	6,	2,	1,	5,	7,	8,	9,	6,	8,	8,	5,	8, 	9,	3,	3,	5,	9,	9,	6,	6,	2,	7,	8,	5,	6,	7,	8,	6,	7,	3,	9,	4,	7,	6,	3,	4,	6,	7,	8,	7,	7,	7,	6,	9,	3,	6,	6,	4,	3,	8,	7,	6,	11,	7,	9,	6,	7,	10,	9,	7,	8,	8,	7,	4],
				 [	6,	3,	3,	6,	8,	6,	6,	9,	4,	6,	6,	7,	8,	7,	7,	5,	6,	6,	6,	6,	6,	6,	9,	8,	9,	6,	6,	1,	5,	6,	7,	7,	6,	7,	6,	3,	4, 	8,	7,	5,	7,	5,	7,	7,	6,	8,	4,	8,	7,	6,	6,	5,	7,	7,	7,	3,	5,	4,	7,	6,	7,	7,	6,	7,	8,	8,	4,	7,	4,	3,	6,	4,	8,	2,	7,	7,	6,	8,	9,	8,	5,	7,	9,	6,	7,	7,	7,	4,	4],
				 [	11,	2,	7,	4,	8,	3,	8,	3,	5,	1,	6,	5,	9,	7,	7,	7,	7,	9,	7,	8,	10,	10,	10,	7,	9,	6,	2,	3,	10,	10,	6,	11,	7,	6,	1,	2,	9, 	8,	7,	5,	5,	5,	3,	8,	6,	7,	9,	8,	7,	6,	7,	8,	8,	8,	4,	5,	4,	4,	3,	1,	6,	5,	6,	6,	8,	6,	3,	6,	6,	3,	3,	9,	5,	1,	10,	9,	6,	10,	9,	9,	6,	8,	8,	8,	8,	9,	3,	6,	6],
				 [	6,	3,	6,	9,	8,	7,	8,	10,	7,	6,	6,	7,	9,	7,	8,	7,	7,	7,	7,	6,	6,	8,	10,	9,	9,	6,	8,	1,	5,	8,	7,	7,	6,	9,	5,	4,	8, 	4,	5,	5,	7,	5,	7,	4,	7,	10,	6,	8,	9,	6,	8,	5,	7,	4,	3,	6,	4,	4,	6,	6,	7,	7,	9,	7,	8,	10,	5,	8,	7,	3,	8,	10,	9,	4,	8,	7,	6,	8,	9,	8,	7,	7,	8,	8,	7,	6,	8,	6,	6],
				 [	6,	8,	6,	10,	4,	6,	5,	3,	8,	6,	8,	7,	10,	5,	6,	7,	7,	7,	11,	7,	6,	7,	10,	9,	10,	6,	5,	1,	8,	7,	5,	7,	9,	7,	7,	4,	3, 	8,	4,	5,	9,	4,	8,	8,	8,	8,	9,	2,	8,	6,	8,	8,	7,	7,	3,	5,	3,	3,	7,	7,	4,	6,	9,	10,	7,	9,	8,	6,	6,	3,	6,	11,	10,	5,	8,	7,	6,	8,	9,	9,	6,	7,	9,	8,	9,	9,	8,	3,	3]
                                                                                                                                                                                                                                                                                                                                                                                    
];                                                                                                                                                                                                                                                                                      

//object that represents the participant and contains the data from  eyetracking file
function Participant () {
	this.ID = "";
	this.finalTable = {}; //the is an associative array (or "map") because it has keys that associates to values (keys in this map are "participant", "seesions", "countseen", etc)
    
    //Intialize the object "Participant" and creates the map with default values of "Trials", "Long/Short" and "total item"
	this.init = function (id){
		this.ID = id;
		this.allSeen = []; //60x16 the 0~1 talbe
		this.finalTable =	{
							"PARTICIPANT"		:	[id],																																																										
							"SESSION"			:	[],																																																									
							"TRIALS"			:	[1,	2,	3,	4,	5,	6,	7,	8,	9,	10,	11,	12,	13,	14,	15,	16,	17,	18, 19,	20,	21,	22,	23,	24,	25,	26,	27,	28,	29,	30,	31,	32,	33,	34,	35,	36,	37,	38,	39,	40,	41,	42,	43,	44,	45,	46,	47,	48,	49,	50,	51,	52,	53, 54,	55,	56,	57,	58,	59,	60],
							"LONG/SHORT"		:	[0,	1,	0,	0,	1,	0,	1,	1,	1,	1,	1,	1,	1,	1,	0,	1,	1,	0,	0,	0,	1,	0,	0,	1,	1,	0,	0,	1,	1,	0,	0,	0,	1,	0,	1,	0,	1,	0,	0,	1,	0,	1,	1,	0,	0,	1,	0,	1,	0,	0,	1,	0,	1,	0,	0,	0,	1,	0,	1,	1 ],
							"TOTAL ITEM"		:	[4,	9,	16,	4,	9,	16,	4,	9,	16,	4,	9,	16,	4,	9,	16,	4,	9,	16, 4,	9,	16,	4,	9,	16, 4,	9,	16,	4,	9,	16,	4,	9,	16,	4,	9,	16,	4,	9,	16,	4,	9,	16,	4,	9,	16,	4,	9,	16,	4,	9,	16,	4,	9,	16,	4,	9,	16,	4,	9,	16],
							"LAST SEEN" 		:	[],	//done																																																								
							"CERTAINTY"			:	[],	//done																																																								
							"ITEM NO."			:	[],	//done																																																								
							"RATING CHOSEN" 	:	[],	//done																																																										
							"TOP R ALL" 		:	[],	//done																																																									
							"TOP R SEEN"		:	[],	//done																																																									
							"COUNT SEEN"		:	[]	//done																																																								
	
							};
	}
    
    //check if the data contains less than 60 trials. if it is --> crashed
	this.checkCrush = 
		function (lst){
			return (lst.length < 60 ? true : false);
		}
     
    //if data crashed --> remember where it crashed by saving the last trial number. then, set the "Last seen" data inside the map 
	this.setLastSeen = 
		function (lst){
			var arr = lst[0];
			if (this.checkCrush(arr)){
				crushed = true;
				idxCrush = arr.length;
				while (arr.length < 60){
					arr.push(1);
				}
			}
			this.finalTable["LAST SEEN"] = arr;
		}

	//for the purpose of running the code, we push mockup values for missing rows (assume that participant only look at item no.1). 
	//Those pushed data will be ignored later in the Excel output file	
	this.setAllSeen = 
		function (lst){
			if (crushed){
				while(lst.length < 60){
					lst.push([1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]);
				}
			}
			this.allSeen = lst;
		}
    
    //check the ID no. of subject participant 
	this.checkID =
		function (n){
			return n == partTest;
		}
    
    //get the values from the 2D array of "Certainty"
	this.setCertainty =
		function (){
			var idx = participants.findIndex(this.checkID);
			
			for (var i = 0; i < certainty.length; i++) {
				this.finalTable["CERTAINTY"].push(certainty[i][idx]);
			}
		}
    
    //from box number, find corresponding item number 
	this.setNumberItem =
		function (){
			var number, last;
			for (var i = 0; i < timing.length; i++) {
				last = this.finalTable["LAST SEEN"][i];
				number = timing[i][last - 1];
				this.finalTable["ITEM NO."].push(number);
			}
		}

    //from the given item number, we match it with corresponding rating
	this.getItemRating =
		function (it){
			var r;
			var partIdx = participants.findIndex(this.checkID);
			var itemIdx = it - 1;
			r = rating[itemIdx][partIdx];
			return r;
		}	
	
	//set the rating of chosen item	
	this.setRatingChosen =
	function (){
		var it;
		for (var i = 0; i < this.finalTable["ITEM NO."].length; i++) {
			it = this.finalTable["ITEM NO."][i];
			this.finalTable["RATING CHOSEN"].push(this.getItemRating(it));
		}	
	}

    //given a list of rating, return the max value
	this.getMaxRating =
		function (lst) {
			return Math.max.apply(null, lst);
		}

    //retrieve all rating for a trial
	this.getAllRatings = 
		function (lst) {
			var ratList = [];
			var i = 0;
			it = lst[i];
			while ((i < lst.length) && (it != 0)){
				ratList.push(this.getItemRating(it));
				i++;
				it = lst[i];
			}
			return ratList;
		}

    //set the max rating among all items within a trial
	this.setTopRatAll = 
		function (){
			var max;
			for (var i = 0; i < timing.length; i++) {
				max = this.getMaxRating(this.getAllRatings(timing[i]));
				this.finalTable["TOP R ALL"].push(max);
			}
		}

    //give the ratings of all seen items within a trial
	this.getSeenRat = 
		function (row){
			var arr = [];
			var it;
			var zeroOne = this.allSeen[row];
			for (var i = 0; i < zeroOne.length; i++) {
				if (parseInt(zeroOne[i]) == 1) { 
					it = timing[row][i]
					arr.push(this.getItemRating(it));
				}
			}
			return arr;
		}	

    //set the top rating among all the seen items within a trial
	this.setTopRatSeen =
		function (){

			var max;
			var arr; //seen ones
			for (var i = 0; i < timing.length; i++) {
				arr = this.getSeenRat(i);
				if (arr.length > 1){ //if there's >1 seen --> find the max
					max = this.getMaxRating(arr);
				}else{
					max = this.getItemRating(this.finalTable["LAST SEEN"][i]); //if only 1 seen --> get that rating
				}
				this.finalTable["TOP R SEEN"].push(max);
			}
		}

	//count how many items have been seen
	this.setCountSeen =
		function (){
			var sum;
			for (var i = 0; i < this.allSeen.length; i++) {
				sum = 0;
				for (var j = 0; j < this.allSeen[i].length; j++) {
					sum += parseInt(this.allSeen[i][j]);
				}
				this.finalTable["COUNT SEEN"].push(sum);
			}
		}

	//assign default values of last seen boxes for trials with missing data
	this.fixAnomaly =
		function (idx){
			var maxBox = this.finalTable["TOTAL ITEM"][idx];
			var lastBox;
			switch(maxBox) {
			    case 9:
			        lastBox = 5;
			        break;
			    case 16:
			        lastBox = 6;
			        break;
			    default: //4
			        lastBox = 1;
			}
			this.finalTable["LAST SEEN"][idx] = lastBox; 
			this.allSeen[idx][lastBox - 1];
		}	

    //detects if some data is missing, and fix it accordingly by assigning dafault values as above.
	this.detectAnomaly =
		function (){
			for (var i = 0; i < this.finalTable["COUNT SEEN"].length; i++) {
				if (this.finalTable["COUNT SEEN"][i] == 0) {
					this.fixAnomaly(i);
					this.finalTable["COUNT SEEN"][i] = 1;
				}
			}
		}
}

var partTest; //participant number
var sessTest; //session number
var crushed = false; //whether crash or not
var idxCrush; //where it crash (trial no.)

//create 2D array representing Excel table
function createExcellArr (){
	var arr = [];
	var labelsCol = ["PARTICIPANT","SESSION","TRIALS","LONG/SHORT","TOTAL ITEM","LAST SEEN","CERTAINTY","ITEM NO.","RATING CHOSEN","TOP R ALL","TOP R SEEN","COUNT SEEN"];
	arr.push(labelsCol);
	var rows = p.finalTable["TRIALS"].length;
	if (crushed) rows = idxCrush;

	//retrieve data from the map corresponding to the rows
	for (var i = 0; i < rows; i++) {
		var line = [];
		line.push(p.ID);
		line.push(sessTest);
		line.push(p.finalTable["TRIALS"][i]);
		line.push(p.finalTable["LONG/SHORT"][i]);	
		line.push(p.finalTable["TOTAL ITEM"][i]);	
		line.push(p.finalTable["LAST SEEN"][i]);	
		line.push(p.finalTable["CERTAINTY"][i]);		
		line.push(p.finalTable["ITEM NO."][i]);	
		line.push(p.finalTable["RATING CHOSEN"][i]); 
		line.push(p.finalTable["TOP R ALL"][i]);	
		line.push(p.finalTable["TOP R SEEN"][i]);	
		line.push(p.finalTable["COUNT SEEN"][i]);
		arr.push(line);	
	}

	return arr;
};

//function that reads the Excel file of participant data, create the object participant and build associated map
//then, calls the function to write the result on an Excel file
function readData(){
	
	var ep=new ExcelPlus();
	// we call openLocal() and when the file is loaded then we want to display its content
	// openLocal() will use the FileAPI if exists, otherwise it will use a Flash object
	ep.openLocal({
	  "flashPath":"/js/excelplus/2.4/swfobject/",
	  "labelButton":"Open an Excel file"
	},function() {
	
	  partTest = document.getElementById("subjText").value;
	  p.init(partTest);

	  sessTest = document.getElementById("sessText").value;
	
	  p.setLastSeen(ep.selectSheet(3).readAll());
	  //console.log(" test " + p.finalTable["LAST SEEN"]);
	  p.setAllSeen(ep.selectSheet(2).readAll());
	  //console.log(" test allSeen " + p.allSeen);
	  p.setCountSeen();
	  //console.log('count: ' + p.finalTable["COUNT SEEN"]);
	  p.detectAnomaly();
	  //console.log("fixed count: " + p.finalTable["COUNT SEEN"]);
	  var dimensions = [ p.allSeen.length, p.allSeen[0].length ];
	  //console.log("dimension: " + dimensions);
	  p.setCertainty();
	  //console.log('cert: ' + p.finalTable["CERTAINTY"]);
	  p.setNumberItem();
	  //console.log('item number: ' + p.finalTable["ITEM NO."]);
	  p.setRatingChosen();
	  //console.log('item rating ' + p.finalTable["RATING CHOSEN"]);
	  p.setTopRatAll();
	  //console.log('top rating all: ' + p.finalTable["TOP R ALL"]);
	  p.setTopRatSeen();
	  //console.log('top rating seen: ' + p.finalTable["TOP R SEEN"]);
	  

	  writeExcelFile();
	})
};

//write the excel file 
function writeExcelFile() {

	var arr = [];
	arr = createExcellArr();
	var ep=new ExcelPlus();
	ep.createFile("final_sbj_" + p.ID)
	  .write({ "content": arr })
	  .saveAs("final_sbj_" + p.ID+".xlsx");
};


//variable "p" holds participant object 
var p;

function inizializza () {

   //each time we run the program, we create a new participant	
	p = new Participant();
	
	readData();


};


window.onload = inizializza;